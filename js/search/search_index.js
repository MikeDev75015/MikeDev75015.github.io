var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/BucketAutoStageInterface.html",[0,0.126,1,1.757]],["body/interfaces/BucketAutoStageInterface.html",[0,0.092,1,1.907,2,0.387,3,0.387,4,0.387,5,0.288,6,1.48,7,1.738,8,1.004,9,0.387,10,2.131,11,2.131,12,2.12,13,2.131,14,2.732,15,2.131,16,2.131,17,5.054,18,1.48,19,2.362,20,2.683,21,2.331,22,1.738,23,2.131,24,2.131,25,2.131,26,2.131,27,1.738,28,2.193,29,2.131,30,2.686,31,3.299,32,1.907,33,2.613,34,1.48,35,3.509,36,2.131,37,2.131,38,2.259,39,2.577,40,1.738,41,3.764,42,2.131,43,1.738,44,1.738,45,2.131,46,2.131,47,3.764,48,2.076,49,2.613,50,2,51,0.288,52,0.655,53,1.852,54,4.655,55,3.797,56,0.629,57,0.045,58,3.159,59,2.577,60,3.159,61,2.577,62,2.193,63,3.159,64,1.388,65,4.162,66,1.961,67,3.159,68,2.577,69,2.577,70,3.159,71,3.159,72,2.193,73,3.159,74,3.159,75,2.193,76,2.577,77,2.89,78,2.577,79,3.159,80,3.159,81,3.159,82,3.159,83,3.159,84,3.159,85,3.159,86,3.159,87,2.89,88,2.577,89,3.159,90,3.159,91,3.159,92,3.159,93,3.159,94,3.159,95,3.159,96,3.159,97,1.488,98,2.474,99,2.193,100,2.577,101,1.488,102,2.577,103,2.577,104,2.577,105,2.577,106,1.325,107,2.193,108,3.797,109,2.577,110,1.907,111,2.577,112,2.577,113,2.577,114,2.193,115,0.387,116,1.132,117,0.016,118,0.024,119,0.016]],["title/interfaces/BucketStageInterface.html",[0,0.126,120,1.757]],["body/interfaces/BucketStageInterface.html",[0,0.13,2,0.363,3,0.363,4,0.363,5,0.27,6,1.387,8,0.941,9,0.363,12,2.036,14,1.599,18,2.09,19,2.689,20,3.055,21,2.528,22,4.512,28,3.514,30,2.827,31,3.144,32,1.817,33,2.798,35,2.798,38,2.232,39,2.455,40,2.455,43,2.455,44,2.455,48,1.691,49,2.09,50,2.689,51,0.27,52,0.624,53,1.817,55,4.249,56,0.684,57,0.045,62,2.798,64,0.897,66,1.418,69,3.288,75,2.09,77,3.37,78,2.455,97,1.418,98,2.768,99,2.798,100,2.455,101,1.418,102,2.455,103,2.455,104,2.455,105,2.455,106,1.691,107,2.798,108,3.288,109,2.455,110,1.817,111,2.455,112,2.455,115,0.363,116,1.599,117,0.027,118,0.023,119,0.015,120,1.817,121,0.838,122,2.09,123,3.009,124,2.455,125,3.009,126,2.455,127,3.009,128,2.455,129,3.009,130,3.009,131,3.009,132,3.009,133,2.455,134,3.009,135,3.009,136,3.009,137,3.009,138,2.455,139,3.009,140,4.03,141,2.185,142,3.288,143,2.798,144,4.03,145,2.798,146,3.009,147,2.09,148,3.009,149,3.009,150,3.009,151,2.09,152,3.009,153,3.009,154,3.009,155,4.03,156,3.009,157,3.009,158,3.009,159,2.09,160,3.009,161,2.798,162,2.455]],["title/interfaces/BuilderOptionsInterface.html",[0,0.126,163,2.021]],["body/interfaces/BuilderOptionsInterface.html",[0,0.17,2,0.716,3,0.716,4,0.716,5,0.532,9,0.716,51,0.532,52,0.993,56,0.647,57,0.044,115,0.716,117,0.03,118,0.036,119,0.03,163,3.324,164,3.213,165,2.735,166,2.735,167,2.378,168,3.213,169,3.213,170,3.213,171,3.213,172,3.881,173,4.376,174,3.073,175,4.376,176,3.905,177,3.905]],["title/interfaces/CollStatsStageInterface.html",[0,0.126,178,1.757]],["body/interfaces/CollStatsStageInterface.html",[0,0.099,2,0.415,3,0.415,4,0.415,5,0.308,8,1.075,9,0.415,12,1.804,14,2.08,18,2.306,19,2.285,30,2.844,38,1.393,48,2.116,50,1.764,51,0.308,52,0.689,56,0.682,57,0.045,61,3.508,66,2.026,87,2.986,98,2.844,101,1.564,106,1.804,113,2.709,115,0.415,117,0.017,118,0.025,119,0.017,133,2.709,141,1.393,143,1.584,159,1.584,161,2.306,162,3.508,174,1.212,178,2.005,179,1.861,180,1.861,181,4.923,182,2.281,183,3.89,184,2.281,185,2.281,186,1.212,187,3.915,188,4.3,189,2.281,190,1.764,191,3.32,192,2.281,193,2.281,194,2.281,195,2.281,196,4.769,197,4.3,198,5.044,199,5.225,200,3.32,201,4.115,202,3.32,203,3.32,204,3.32,205,2.709,206,3.32,207,3.32,208,3.32,209,3.32,210,4.3,211,3.32,212,3.32,213,3.32,214,2.709,215,2.709,216,2.709,217,3.32,218,3.32,219,3.32,220,5.649,221,4.553,222,4.3,223,2.986,224,3.508,225,3.32,226,4.3,227,4.769,228,3.508,229,3.32,230,3.32,231,3.32,232,2.986,233,3.508,234,3.32,235,3.32,236,3.32,237,2.709,238,3.32,239,3.32,240,3.32,241,3.32,242,2.281]],["title/interfaces/DebugBuildInterface.html",[0,0.126,243,2.021]],["body/interfaces/DebugBuildInterface.html",[0,0.223,2,0.714,3,0.714,4,0.714,5,0.531,9,0.714,34,3.319,51,0.531,52,0.992,56,0.646,57,0.045,115,0.714,117,0.03,118,0.036,119,0.03,167,2.886,172,3.577,174,2.737,243,3.319,244,2.729,245,3.206,246,4.78,247,5.586,248,5.586,249,3.236,250,1.649,251,3.93]],["title/interfaces/DebugHistoryInterface.html",[0,0.126,249,1.757]],["body/interfaces/DebugHistoryInterface.html",[0,0.212,2,0.643,3,0.643,4,0.643,5,0.478,9,0.643,51,0.478,52,0.929,53,1.933,56,0.698,57,0.045,64,1.623,77,3.108,101,2.109,115,0.643,117,0.027,118,0.034,119,0.027,141,2.166,167,2.703,244,2.455,249,2.703,250,1.483,252,2.884,253,3.652,254,3.108,255,4.692,256,5.442,257,2.037,258,4.476,259,2.433,260,3.585,261,4.476,262,4.476,263,4.476,264,3.535]],["title/interfaces/FacetStageInterface.html",[0,0.126,265,1.757]],["body/interfaces/FacetStageInterface.html",[0,0.225,2,0.73,3,0.73,4,0.73,5,0.543,8,1.893,9,0.73,19,2.574,28,3.364,31,2.925,38,2.032,57,0.044,64,1.444,98,2.574,101,2.282,115,0.73,116,2.574,117,0.031,118,0.037,119,0.031,121,2.032,250,1.685,257,1.814,259,2.45,265,2.925,266,3.952,267,2.574,268,4.017,269,3.277,270,4.017,271,4.017]],["title/interfaces/GeoNearStageInterface.html",[0,0.126,272,1.757]],["body/interfaces/GeoNearStageInterface.html",[0,0.103,2,0.269,3,0.269,4,0.269,5,0.2,8,0.698,9,0.269,12,2.031,14,2.408,19,2.333,30,2.133,31,2.07,32,2.07,35,1.656,38,2.142,50,1.267,51,0.718,52,0.495,53,2.081,56,0.629,57,0.045,64,1.197,66,2.45,68,1.945,98,2.869,99,1.656,107,1.656,115,0.269,116,2.471,117,0.011,118,0.026,119,0.036,121,1.255,124,2.797,126,1.945,138,2.797,141,1,142,3.275,143,3.229,145,1.656,147,1.656,159,1.656,161,2.381,168,1.945,174,2.133,183,1.945,201,2.797,205,1.945,214,2.797,215,2.797,216,4.305,221,1.945,224,1.945,228,2.797,232,3.611,233,2.797,237,2.797,272,1.44,273,1.209,274,3.696,275,1.59,276,3.429,277,4.015,278,3.429,279,3.429,280,3.429,281,4.651,282,4.015,283,5.278,284,3.429,285,3.429,286,1.656,287,3.429,288,1.656,289,4.015,290,2.385,291,2.385,292,2.385,293,2.385,294,2.385,295,4.015,296,2.385,297,2.385,298,3.429,299,2.385,300,4.015,301,2.385,302,4.015,303,3.429,304,2.385,305,4.989,306,2.797,307,4.842,308,4.015,309,3.275,310,3.429,311,1.656,312,2.385,313,2.385,314,4.39,315,5.278,316,4.015,317,3.429,318,4.015,319,4.39,320,4.39,321,3.429,322,2.385,323,2.385,324,2.385,325,2.385,326,4.015,327,1.615,328,2.797,329,2.385,330,1.945,331,2.385,332,2.385,333,3.429,334,2.385,335,2.385,336,2.385,337,3.429,338,4.015,339,3.429,340,2.385,341,2.385,342,2.385,343,2.385,344,2.385,345,1.945,346,2.385,347,2.385,348,2.385,349,2.385,350,2.385,351,2.385]],["title/interfaces/InitOptionsInterface.html",[0,0.126,352,2.021]],["body/interfaces/InitOptionsInterface.html",[0,0.169,2,0.709,3,0.709,4,0.709,5,0.527,9,0.709,51,0.527,52,0.988,53,2.002,56,0.643,57,0.044,115,0.709,117,0.03,118,0.036,119,0.03,165,2.709,166,2.709,167,2.355,169,3.183,170,3.183,171,3.183,172,3.872,173,4.361,174,3.068,175,4.361,176,3.882,177,3.882,352,3.305,353,3.183,354,3.901]],["title/interfaces/LookupConditionPayloadInterface.html",[0,0.126,355,2.021]],["body/interfaces/LookupConditionPayloadInterface.html",[0,0.215,2,0.658,3,0.658,4,0.658,5,0.49,9,0.658,51,0.704,52,0.943,53,2.05,56,0.766,57,0.045,64,1.69,106,2.185,115,0.658,117,0.028,118,0.035,119,0.028,250,1.52,257,2.05,259,2.454,355,3.617,356,2.515,357,2.955,358,2.515,359,2.58]],["title/interfaces/LookupEqualityPayloadInterface.html",[0,0.126,360,2.021]],["body/interfaces/LookupEqualityPayloadInterface.html",[0,0.206,2,0.711,3,0.711,4,0.711,5,0.529,9,0.711,51,0.529,52,0.989,56,0.723,57,0.045,64,1.738,115,0.711,117,0.03,118,0.036,119,0.03,356,2.716,358,2.716,360,3.57,361,3.19,362,4.551,363,4.551]],["title/classes/PipelineError.html",[364,2.021,365,2.021]],["body/classes/PipelineError.html",[3,0.696,4,0.696,5,0.517,9,0.696,50,2.034,51,0.517,52,0.976,53,1.433,56,0.636,57,0.045,64,1.584,101,2.615,115,0.696,117,0.029,118,0.036,119,0.029,141,1.606,147,3.536,257,1.433,269,3.837,364,2.658,365,3.786,366,3.122,367,3.122,368,4.704,369,5.092,370,4.704,371,4.704,372,3.828,373,4.154,374,3.828,375,3.828,376,3.828,377,3.828,378,3.828]],["title/interfaces/StageErrorInterface.html",[0,0.126,379,2.021]],["body/interfaces/StageErrorInterface.html",[0,0.211,2,0.741,3,0.741,4,0.741,5,0.551,9,0.741,51,0.551,52,1.014,56,0.661,57,0.044,64,1.68,115,0.741,117,0.031,118,0.037,119,0.031,373,4.596,379,3.635,380,2.462,381,3.327,382,5.634]],["title/interfaces/StageInterface.html",[0,0.126,259,1.371]],["body/interfaces/StageInterface.html",[0,0.154,1,2.405,2,0.355,3,0.355,4,0.355,5,0.264,9,0.355,12,1.24,14,1.571,21,2.122,30,1.571,32,1.785,48,2.022,51,0.264,52,0.614,53,2.205,56,0.776,57,0.046,62,2.053,64,1.276,97,2.122,106,1.671,115,0.355,116,1.571,117,0.015,118,0.022,119,0.015,120,2.405,121,1.671,178,2.405,186,2.393,190,2.393,250,0.819,259,1.877,265,2.405,267,2.393,272,2.405,275,2.393,327,2.122,359,2.122,383,1.592,384,2.393,385,2.719,386,2.719,387,2.719,388,2.719,389,2.719,390,2.393,391,2.393,392,2.393,393,2.719,394,2.719,395,2.719,396,2.719,397,2.719,398,2.719,399,2.719,400,2.719,401,2.719,402,2.719,403,2.719,404,2.719,405,2.957,406,2.957]],["title/changelog.html",[407,1.698,408,1.698,409,1.995]],["body/changelog.html",[5,0.297,34,2.244,57,0.025,59,1.793,75,1.526,117,0.017,118,0.025,119,0.017,121,0.922,250,0.922,254,1.526,257,0.823,327,1.035,345,1.793,359,1.522,384,1.168,390,1.168,409,1.793,410,2.198,411,2.198,412,2.198,413,2.198,414,2.198,415,2.198,416,2.198,417,5.935,418,2.198,419,4.842,420,5.935,421,4.707,422,4.224,423,2.933,424,1.526,425,2.636,426,2.198,427,2.198,428,2.198,429,2.198,430,1.526,431,2.244,432,2.198,433,2.198,434,1.526,435,2.198,436,2.198,437,2.198,438,2.198,439,2.198,440,2.198,441,2.198,442,3.231,443,2.198,444,2.198,445,2.198,446,2.244,447,2.198,448,2.198,449,4.224,450,2.198,451,2.198,452,2.198,453,2.198,454,5.602,455,2.198,456,2.198,457,2.198,458,2.198,459,2.198,460,2.198,461,2.198,462,2.198,463,2.198,464,2.198,465,2.198,466,2.198,467,2.198,468,2.198,469,2.198,470,2.198,471,2.198,472,2.198,473,2.198,474,5.769,475,2.198,476,2.198,477,2.198,478,2.198,479,2.198,480,2.198,481,2.198,482,2.198,483,2.198,484,2.198,485,2.198,486,2.198,487,2.198,488,2.198,489,2.198,490,2.198,491,2.198,492,4.866,493,3.231,494,2.198,495,1.793,496,2.198,497,2.198,498,3.231,499,3.231,500,2.198,501,2.244,502,2.198,503,2.198,504,2.198,505,2.198,506,2.198,507,2.198,508,2.198,509,2.198,510,2.198,511,2.198,512,2.198,513,2.198]],["title/coverage.html",[514,3.214]],["body/coverage.html",[0,0.2,1,0.72,5,0.161,6,1.385,7,0.972,8,1.576,20,0.72,38,0.5,56,0.27,57,0.045,72,0.828,106,0.5,110,0.72,114,0.828,117,0.009,118,0.015,119,0.009,120,0.72,151,0.828,163,0.828,164,0.972,165,1.385,178,0.72,179,0.972,180,0.972,223,0.828,243,0.828,244,1.385,245,0.972,249,0.72,252,0.972,259,0.562,260,0.828,265,0.72,266,0.972,272,0.72,273,0.972,274,0.972,286,0.828,288,0.828,311,0.828,352,0.828,353,0.972,355,0.828,356,1.385,357,0.972,358,1.385,360,0.828,361,0.972,364,1.385,365,0.828,367,0.972,379,0.828,380,1.204,381,0.972,383,0.972,423,0.828,424,0.828,431,0.828,434,0.828,501,0.828,514,0.972,515,0.972,516,1.192,517,1.192,518,2.571,519,5.936,520,1.192,521,5.95,522,5.937,523,1.192,524,1.192,525,1.192,526,3.345,527,1.994,528,1.994,529,0.972,530,0.972,531,1.994,532,1.994,533,0.972,534,3.345,535,0.828,536,1.192,537,1.192,538,1.192,539,1.192,540,1.994,541,0.972,542,1.192,543,4.027,544,0.972,545,0.972,546,0.972,547,0.972,548,0.972,549,0.972,550,0.972,551,4.851,552,0.972,553,0.972,554,0.972,555,0.972,556,0.972,557,0.972,558,0.972,559,0.972,560,0.972,561,0.972,562,0.972,563,0.972,564,0.972,565,4.91,566,0.972,567,0.972,568,0.972,569,0.972,570,0.972,571,0.972,572,0.972,573,0.972,574,0.972,575,0.972,576,0.972,577,0.972,578,0.972,579,2.571,580,3.841,581,0.972,582,0.972,583,0.972,584,0.972,585,0.972,586,0.972,587,2.571,588,0.972,589,0.972,590,0.972,591,1.994,592,1.994,593,0.972,594,1.994,595,1.994,596,0.972,597,0.972,598,4.964,599,0.972,600,0.972,601,0.972,602,0.972,603,0.972,604,0.972,605,0.972,606,0.972,607,0.972,608,0.972,609,0.972,610,0.972,611,0.972,612,0.972,613,0.972,614,0.972,615,0.972,616,0.972,617,3.617,618,0.972,619,0.972,620,0.972,621,0.972,622,3.841,623,0.972,624,0.972,625,0.972,626,0.972,627,0.972,628,0.972,629,0.972,630,5.1,631,0.972,632,0.972,633,0.972,634,0.972,635,0.972,636,0.972,637,0.972,638,0.972,639,0.972,640,0.972,641,0.972,642,0.972,643,0.972,644,0.972,645,0.972,646,0.972,647,0.972,648,0.972,649,0.972,650,0.972,651,0.972,652,4.786,653,0.972,654,0.972,655,0.972,656,0.972,657,0.972,658,0.972,659,0.972,660,0.972,661,0.972,662,0.972,663,0.972,664,0.972,665,0.972,666,0.972,667,0.972,668,4.185,669,0.972,670,0.972,671,0.972,672,0.972,673,0.972,674,0.972,675,0.972,676,1.192,677,1.192,678,1.192,679,1.192]],["title/dependencies.html",[680,1.995,681,2.848]],["body/dependencies.html",[57,0.043,117,0.034,118,0.039,119,0.034,501,3.123,681,3.668,682,4.497,683,4.497,684,4.497,685,4.497,686,4.497]],["title/miscellaneous/enumerations.html",[687,1.477,688,2.848]],["body/miscellaneous/enumerations.html",[12,1.37,21,2.004,48,1.784,51,0.441,57,0.045,97,2.004,117,0.025,118,0.032,119,0.025,122,2.267,141,2.487,186,2.26,190,2.26,257,1.592,267,2.26,275,2.26,327,2.004,359,2.004,380,1.971,384,2.26,385,2.568,386,2.568,387,2.568,388,2.568,389,2.568,390,2.26,391,2.26,392,2.26,393,2.568,394,2.568,395,2.568,396,2.568,397,2.568,398,2.568,399,2.568,400,2.568,401,2.568,402,2.568,403,2.568,404,2.568,430,2.267,446,2.953,535,2.953,687,1.971,688,2.663,689,4.253,690,2.663,691,2.663,692,3.859,693,2.663,694,2.663,695,2.663,696,2.663,697,2.663]],["title/index.html",[51,0.33,407,1.698,408,1.698]],["body/index.html",[12,0.736,20,2.018,21,0.827,33,1.219,38,0.736,48,0.736,56,0.237,57,0.046,66,0.827,72,1.219,76,2.223,87,2.321,97,0.827,106,0.736,110,1.06,114,1.219,117,0.013,118,0.021,119,0.013,121,0.736,122,1.219,128,1.432,141,0.736,145,1.219,151,2.321,186,0.933,190,0.933,223,1.219,232,2.833,250,1.402,253,1.432,254,2.321,257,1.864,260,1.219,267,0.933,275,0.933,286,1.219,288,1.219,309,2.223,311,1.219,327,1.775,328,1.432,330,1.432,359,1.775,362,1.432,363,1.432,384,2.002,385,1.06,386,1.06,387,1.06,388,1.06,389,1.06,390,2.002,391,0.933,392,0.933,393,1.06,394,1.06,395,1.06,396,1.06,397,1.06,398,1.06,399,1.06,400,1.06,401,1.06,402,1.06,403,2.275,404,1.06,423,1.219,424,2.998,425,1.432,430,1.893,431,2.833,434,1.893,446,2.321,529,1.432,530,2.726,533,2.223,541,1.432,544,1.432,545,1.432,546,1.432,547,1.432,548,1.432,549,1.432,550,1.432,552,1.432,553,1.432,554,1.432,555,1.432,556,1.432,557,1.432,558,1.432,559,1.432,560,1.432,561,1.432,562,1.432,563,1.432,564,1.432,566,3.074,567,1.432,568,1.432,569,1.432,570,1.432,571,1.432,572,1.432,573,1.432,574,1.432,575,1.432,576,1.432,577,1.432,578,1.432,581,1.432,582,1.432,583,1.432,584,1.432,585,1.432,586,1.432,588,1.432,589,1.432,590,1.432,593,1.432,596,1.432,597,1.432,599,1.432,600,1.432,601,1.432,602,1.432,603,1.432,604,1.432,605,1.432,606,1.432,607,1.432,608,1.432,609,1.432,610,1.432,611,1.432,612,1.432,613,1.432,614,1.432,615,1.432,616,1.432,618,1.432,619,1.432,620,1.432,621,1.432,623,1.432,624,1.432,625,1.432,626,1.432,627,1.432,628,1.432,629,1.432,631,1.432,632,1.432,633,1.432,634,1.432,635,1.432,636,1.432,637,1.432,638,1.432,639,1.432,640,1.432,641,1.432,642,1.432,643,1.432,644,1.432,645,1.432,646,1.432,647,1.432,648,1.432,649,1.432,650,1.432,651,1.432,653,1.432,654,1.432,655,1.432,656,1.432,657,1.432,658,1.432,659,1.432,660,1.432,661,1.432,662,1.432,663,1.432,664,1.432,665,1.432,666,1.432,667,1.432,669,1.432,670,1.432,671,1.432,672,1.432,673,1.432,674,1.432,675,1.432,680,1.432,691,2.726,692,2.726,693,1.432,694,1.432,695,1.432,696,1.432,697,1.432,698,1.755,699,1.755,700,1.755,701,2.726,702,1.755,703,1.755,704,1.755,705,1.755,706,1.755,707,1.755,708,1.755,709,1.755,710,1.755,711,2.726,712,1.755,713,1.755,714,1.755,715,1.755,716,2.726,717,2.726,718,1.755,719,3.768,720,2.726,721,2.726,722,3.768,723,2.726,724,2.726,725,2.726,726,2.726,727,2.726,728,1.755,729,4.08,730,2.726,731,1.755,732,1.755,733,2.726,734,1.755,735,1.755,736,1.755,737,1.755,738,1.755,739,1.755,740,1.755,741,1.755,742,1.755,743,1.755,744,1.755,745,1.755]],["title/license.html",[407,1.698,408,1.698,746,1.995]],["body/license.html",[27,2.975,49,2.532,57,0.035,66,2.15,117,0.028,118,0.035,119,0.028,166,2.532,255,2.975,306,2.975,391,1.938,392,1.938,419,2.975,515,2.975,746,2.975,747,3.647,748,4.983,749,3.647,750,3.647,751,3.647,752,4.564,753,3.647,754,3.647,755,3.647,756,3.647,757,3.647,758,3.647,759,4.564,760,5.676,761,3.647,762,3.647,763,3.647,764,4.983,765,3.647,766,4.564,767,3.647,768,3.647,769,3.647,770,3.647,771,3.647,772,3.647,773,4.564,774,3.647,775,3.647,776,3.647,777,3.647,778,3.647,779,3.647,780,3.647,781,4.564,782,4.564,783,3.647,784,3.647,785,3.647,786,3.647,787,3.647,788,3.647,789,3.647,790,3.647,791,3.647,792,3.647,793,3.647,794,3.647,795,3.647,796,3.647,797,3.647,798,3.647,799,3.647,800,3.647,801,3.647,802,3.647,803,3.647,804,3.647,805,3.647,806,3.647,807,3.647,808,3.647,809,3.647]],["title/modules.html",[810,3.214]],["body/modules.html",[57,0.04,117,0.035,118,0.04,119,0.035,810,3.752]],["title/overview.html",[811,3.214]],["body/overview.html",[2,0.826,57,0.04,88,3.709,117,0.035,118,0.04,119,0.035,366,3.709,495,3.709,811,3.709]],["title/miscellaneous/typealiases.html",[687,1.477,812,3.491]],["body/miscellaneous/typealiases.html",[21,1.803,48,1.606,51,0.517,56,0.636,57,0.045,97,1.803,117,0.029,118,0.036,119,0.029,121,1.606,186,2.034,190,2.034,257,1.433,267,2.034,275,2.034,327,1.803,359,1.803,380,2.311,384,2.034,385,2.311,386,2.311,387,2.311,388,2.311,389,2.311,390,2.034,391,2.034,392,2.034,393,2.311,394,2.311,395,2.311,396,2.311,397,2.311,398,2.311,399,2.311,400,2.311,401,2.311,402,2.311,403,2.311,404,2.311,535,3.266,687,2.311,690,3.122,813,3.828,814,4.704]]],"invertedIndex":[["",{"_index":57,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"classes/PipelineError.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":729,"title":{},"body":{"index.html":{}}}],["0.0.2",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["0.5.33",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["03",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":87,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"index.html":{}}}],["1/1",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":75,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"changelog.html":{}}}],["100",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["1023",{"_index":235,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["1023.999",{"_index":234,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["1024",{"_index":231,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["11",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["11/11",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":495,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["14",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":88,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"overview.html":{}}}],["2.0.1",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["2.6",{"_index":346,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["20",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":419,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["281fb81",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["2d",{"_index":305,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["2dsphere",{"_index":307,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["3/3",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["31/31",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":59,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"changelog.html":{}}}],["33",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["36",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["37",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["39",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["40",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["43",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["45",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["46",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["47",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["48",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["49",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":89,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["5/5",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["51",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["52",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["53",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["54",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["54/54",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["56",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["58",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["59",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["6/6",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["61",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["62",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["62855da",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["63",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["65",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["67",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["6c243e1",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["826ac37",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["8dc7919",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["9b859cf",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["9c97026",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["_id",{"_index":33,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"index.html":{}}}],["_id.max",{"_index":42,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["_id.min",{"_index":37,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["ability",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":780,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":552,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["accumulator",{"_index":110,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"coverage.html":{},"index.html":{}}}],["acos",{"_index":653,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["acosh",{"_index":654,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["action",{"_index":255,"title":{},"body":{"interfaces/DebugHistoryInterface.html":{},"license.html":{}}}],["activate",{"_index":175,"title":{},"body":{"interfaces/BuilderOptionsInterface.html":{},"interfaces/InitOptionsInterface.html":{}}}],["acts",{"_index":125,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["add",{"_index":423,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{}}}],["addfields",{"_index":384,"title":{},"body":{"interfaces/StageInterface.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["addition",{"_index":109,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["additional",{"_index":136,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["adds",{"_index":199,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["addstage",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["addtoset",{"_index":544,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["adjacent",{"_index":123,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["affect",{"_index":236,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["aggregation",{"_index":691,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["aggregation/index.ts",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["alias",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":813,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allelementstrue",{"_index":623,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["allows",{"_index":707,"title":{},"body":{"index.html":{}}}],["alpha.0",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["alpha.4",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["alpha.5",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["alpha.7",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":306,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{},"license.html":{}}}],["anyelementtrue",{"_index":624,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["appear",{"_index":695,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["arising",{"_index":807,"title":{},"body":{"license.html":{}}}],["array",{"_index":122,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["arrayelemat",{"_index":566,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["arrayelemat('$profile.availability",{"_index":739,"title":{},"body":{"index.html":{}}}],["arrayelemat('$profile.skills",{"_index":738,"title":{},"body":{"index.html":{}}}],["arraytoobject",{"_index":567,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ascending",{"_index":127,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["asin",{"_index":655,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["asinh",{"_index":656,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["associated",{"_index":761,"title":{},"body":{"license.html":{}}}],["atan",{"_index":657,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["atan2",{"_index":658,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["atanh",{"_index":659,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["attempt",{"_index":25,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["authors",{"_index":798,"title":{},"body":{"license.html":{}}}],["auto",{"_index":7,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"coverage.html":{}}}],["automatically",{"_index":23,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["availability",{"_index":730,"title":{},"body":{"index.html":{}}}],["available",{"_index":76,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"index.html":{}}}],["avg",{"_index":545,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["b4066e0",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":18,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{}}}],["between",{"_index":334,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["binarysize",{"_index":596,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["bit",{"_index":60,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["boolean",{"_index":174,"title":{},"body":{"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{}}}],["bound",{"_index":41,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["boundaries",{"_index":22,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["boundary",{"_index":69,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["bounds",{"_index":36,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["bsonsize",{"_index":597,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["bucket",{"_index":21,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["bucketauto",{"_index":385,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["bucketautostageinterface",{"_index":1,"title":{"interfaces/BucketAutoStageInterface.html":{}},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/StageInterface.html":{},"coverage.html":{}}}],["buckets",{"_index":17,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["bucketstageinterface",{"_index":120,"title":{"interfaces/BucketStageInterface.html":{}},"body":{"interfaces/BucketStageInterface.html":{},"interfaces/StageInterface.html":{},"coverage.html":{}}}],["bug",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["build.interface.ts",{"_index":245,"title":{},"body":{"interfaces/DebugBuildInterface.html":{},"coverage.html":{}}}],["builder",{"_index":254,"title":{},"body":{"interfaces/DebugHistoryInterface.html":{},"changelog.html":{},"index.html":{}}}],["builder's",{"_index":169,"title":{},"body":{"interfaces/BuilderOptionsInterface.html":{},"interfaces/InitOptionsInterface.html":{}}}],["builder/helpers",{"_index":714,"title":{},"body":{"index.html":{}}}],["builder/operators",{"_index":715,"title":{},"body":{"index.html":{}}}],["builder@latest",{"_index":712,"title":{},"body":{"index.html":{}}}],["builderoptionsinterface",{"_index":163,"title":{"interfaces/BuilderOptionsInterface.html":{}},"body":{"interfaces/BuilderOptionsInterface.html":{},"coverage.html":{}}}],["building",{"_index":378,"title":{},"body":{"classes/PipelineError.html":{}}}],["bundle",{"_index":171,"title":{},"body":{"interfaces/BuilderOptionsInterface.html":{},"interfaces/InitOptionsInterface.html":{}}}],["bytes",{"_index":227,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["c",{"_index":749,"title":{},"body":{"license.html":{}}}],["cache",{"_index":241,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["calculate",{"_index":297,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["calculated",{"_index":68,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["calculates",{"_index":333,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["calculating",{"_index":304,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["called",{"_index":16,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["categorizes",{"_index":10,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["ceil",{"_index":553,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["center",{"_index":314,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["change",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":409,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":756,"title":{},"body":{"license.html":{}}}],["claim",{"_index":801,"title":{},"body":{"license.html":{}}}],["class",{"_index":364,"title":{"classes/PipelineError.html":{}},"body":{"classes/PipelineError.html":{},"coverage.html":{}}}],["classes",{"_index":366,"title":{},"body":{"classes/PipelineError.html":{},"overview.html":{}}}],["closest",{"_index":325,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["cluster",{"_index":189,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["clusters",{"_index":209,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["collection",{"_index":183,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["collection’s",{"_index":203,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["collstats",{"_index":190,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["collstatsstageinterface",{"_index":178,"title":{"interfaces/CollStatsStageInterface.html":{}},"body":{"interfaces/CollStatsStageInterface.html":{},"interfaces/StageInterface.html":{},"coverage.html":{}}}],["commit",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["compare",{"_index":581,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["complete",{"_index":246,"title":{},"body":{"interfaces/DebugBuildInterface.html":{}}}],["complex",{"_index":741,"title":{},"body":{"index.html":{}}}],["concat",{"_index":631,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["concatarrays",{"_index":568,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["cond",{"_index":588,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["condition",{"_index":357,"title":{},"body":{"interfaces/LookupConditionPayloadInterface.html":{},"coverage.html":{}}}],["conditionpayload",{"_index":529,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["conditions",{"_index":779,"title":{},"body":{"license.html":{}}}],["connection",{"_index":808,"title":{},"body":{"license.html":{}}}],["const",{"_index":716,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":369,"title":{},"body":{"classes/PipelineError.html":{}}}],["constructor(message",{"_index":370,"title":{},"body":{"classes/PipelineError.html":{}}}],["containing",{"_index":160,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["contains",{"_index":32,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/StageInterface.html":{}}}],["contract",{"_index":166,"title":{},"body":{"interfaces/BuilderOptionsInterface.html":{},"interfaces/InitOptionsInterface.html":{},"license.html":{}}}],["convert",{"_index":288,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{},"coverage.html":{},"index.html":{}}}],["coordinate",{"_index":320,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["copies",{"_index":773,"title":{},"body":{"license.html":{}}}],["copy",{"_index":759,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":748,"title":{},"body":{"license.html":{}}}],["core/stage.interface",{"_index":271,"title":{},"body":{"interfaces/FacetStageInterface.html":{}}}],["cos",{"_index":660,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["cosh",{"_index":661,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["count",{"_index":48,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["coverage",{"_index":514,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":258,"title":{},"body":{"interfaces/DebugHistoryInterface.html":{}}}],["currently",{"_index":240,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["custom",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["damages",{"_index":802,"title":{},"body":{"license.html":{}}}],["data",{"_index":224,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["dataset",{"_index":709,"title":{},"body":{"index.html":{}}}],["date",{"_index":256,"title":{},"body":{"interfaces/DebugHistoryInterface.html":{}}}],["date_format",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["datefromparts",{"_index":599,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["datefromstring",{"_index":600,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["datetoparts",{"_index":601,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["datetostring",{"_index":602,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dayofmonth",{"_index":603,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dayofweek",{"_index":604,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dayofyear",{"_index":605,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["db.aggregate",{"_index":694,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["db.collection.aggregate",{"_index":693,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["deal",{"_index":763,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":809,"title":{},"body":{"license.html":{}}}],["debug",{"_index":172,"title":{},"body":{"interfaces/BuilderOptionsInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/InitOptionsInterface.html":{}}}],["debugbuildinterface",{"_index":243,"title":{"interfaces/DebugBuildInterface.html":{}},"body":{"interfaces/DebugBuildInterface.html":{},"coverage.html":{}}}],["debughistoryinterface",{"_index":249,"title":{"interfaces/DebugHistoryInterface.html":{}},"body":{"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"coverage.html":{}}}],["default",{"_index":50,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"classes/PipelineError.html":{}}}],["defined",{"_index":269,"title":{},"body":{"interfaces/FacetStageInterface.html":{},"classes/PipelineError.html":{}}}],["degreestoradians",{"_index":662,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dependencies",{"_index":681,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deprecated",{"_index":344,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"classes/PipelineError.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{}}}],["determined",{"_index":24,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["determines",{"_index":332,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["dev",{"_index":751,"title":{},"body":{"license.html":{}}}],["different",{"_index":153,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["display",{"_index":229,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["displays",{"_index":225,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["distance",{"_index":283,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["distancefield",{"_index":276,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["distancemultiplier",{"_index":277,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["distances",{"_index":287,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["distribute",{"_index":27,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"license.html":{}}}],["divide",{"_index":554,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["document",{"_index":30,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/StageInterface.html":{}}}],["documentation",{"_index":515,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documented",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["documents",{"_index":12,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["document’s",{"_index":343,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["dollar",{"_index":102,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["dot",{"_index":284,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["duplicate",{"_index":349,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["e12",{"_index":91,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["e192",{"_index":95,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["e24",{"_index":92,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["e48",{"_index":93,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["e6",{"_index":90,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["e96",{"_index":94,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["each",{"_index":28,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/FacetStageInterface.html":{}}}],["earth",{"_index":293,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["easier",{"_index":705,"title":{},"body":{"index.html":{}}}],["edges",{"_index":70,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["edit",{"_index":706,"title":{},"body":{"index.html":{}}}],["email",{"_index":726,"title":{},"body":{"index.html":{}}}],["embedded",{"_index":214,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["empty",{"_index":219,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["enclose",{"_index":104,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["end",{"_index":71,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["ensure",{"_index":67,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["entries",{"_index":154,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["enumerations",{"_index":688,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["eq",{"_index":737,"title":{},"body":{"index.html":{}}}],["equal",{"_index":151,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"coverage.html":{},"index.html":{}}}],["equality",{"_index":361,"title":{},"body":{"interfaces/LookupEqualityPayloadInterface.html":{},"coverage.html":{}}}],["equalitypayload",{"_index":530,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["equivalent",{"_index":735,"title":{},"body":{"index.html":{}}}],["error",{"_index":147,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"classes/PipelineError.html":{}}}],["error.interface.ts",{"_index":381,"title":{},"body":{"interfaces/StageErrorInterface.html":{},"coverage.html":{}}}],["even",{"_index":342,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["evenly",{"_index":26,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["event",{"_index":797,"title":{},"body":{"license.html":{}}}],["example",{"_index":228,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["examples",{"_index":742,"title":{},"body":{"index.html":{}}}],["except",{"_index":45,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["exception",{"_index":130,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["exclusive",{"_index":44,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["execution",{"_index":217,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["exists",{"_index":312,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["explicitly",{"_index":112,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["exponent",{"_index":555,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["export",{"_index":115,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"classes/PipelineError.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{}}}],["expr",{"_index":736,"title":{},"body":{"index.html":{}}}],["express",{"_index":788,"title":{},"body":{"license.html":{}}}],["expression",{"_index":20,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"coverage.html":{},"index.html":{}}}],["expressions",{"_index":111,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["extends",{"_index":368,"title":{},"body":{"classes/PipelineError.html":{}}}],["facet",{"_index":267,"title":{},"body":{"interfaces/FacetStageInterface.html":{},"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["facetstageinterface",{"_index":265,"title":{"interfaces/FacetStageInterface.html":{}},"body":{"interfaces/FacetStageInterface.html":{},"interfaces/StageInterface.html":{},"coverage.html":{}}}],["factor",{"_index":221,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["fall",{"_index":138,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["falls",{"_index":158,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["false",{"_index":339,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["fast",{"_index":206,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["features",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":38,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"coverage.html":{},"index.html":{}}}],["fields",{"_index":107,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"classes/PipelineError.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":762,"title":{},"body":{"license.html":{}}}],["filter",{"_index":569,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["final",{"_index":46,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["find",{"_index":324,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["first",{"_index":311,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{},"coverage.html":{},"index.html":{}}}],["firstname",{"_index":724,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":793,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["floor",{"_index":556,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["following",{"_index":778,"title":{},"body":{"license.html":{}}}],["foreignfield",{"_index":362,"title":{},"body":{"interfaces/LookupEqualityPayloadInterface.html":{},"index.html":{}}}],["free",{"_index":755,"title":{},"body":{"license.html":{}}}],["full",{"_index":168,"title":{},"body":{"interfaces/BuilderOptionsInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["functionoperator",{"_index":593,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["furnished",{"_index":776,"title":{},"body":{"license.html":{}}}],["geojson",{"_index":318,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["geometry",{"_index":338,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["geonear",{"_index":275,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{},"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["geonearstageinterface",{"_index":272,"title":{"interfaces/GeoNearStageInterface.html":{}},"body":{"interfaces/GeoNearStageInterface.html":{},"interfaces/StageInterface.html":{},"coverage.html":{}}}],["geospatial",{"_index":302,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["getpipeline",{"_index":732,"title":{},"body":{"index.html":{}}}],["getstagetypevalue",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["getting",{"_index":407,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":754,"title":{},"body":{"license.html":{}}}],["granularity",{"_index":54,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["graphlookup",{"_index":386,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["greater",{"_index":150,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["greaterthan",{"_index":582,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["greaterthanequal",{"_index":583,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["group",{"_index":97,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["groupby",{"_index":55,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["grouped",{"_index":63,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["groups",{"_index":15,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["guidelines",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":425,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["helpers",{"_index":743,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":753,"title":{},"body":{"license.html":{}}}],["highest",{"_index":152,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["histogram",{"_index":212,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["histograms",{"_index":242,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["history.interface",{"_index":251,"title":{},"body":{"interfaces/DebugBuildInterface.html":{}}}],["history.interface.ts",{"_index":252,"title":{},"body":{"interfaces/DebugHistoryInterface.html":{},"coverage.html":{}}}],["historylist",{"_index":247,"title":{},"body":{"interfaces/DebugBuildInterface.html":{}}}],["holders",{"_index":799,"title":{},"body":{"license.html":{}}}],["hour",{"_index":606,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["https://docs.mongodb.com/manual/reference/operator/aggregation/collstats",{"_index":195,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["i.e",{"_index":162,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{}}}],["id",{"_index":719,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":294,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["ifnull",{"_index":589,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ignore",{"_index":533,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["impact",{"_index":351,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["implement",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":789,"title":{},"body":{"license.html":{}}}],["import",{"_index":250,"title":{},"body":{"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/StageInterface.html":{},"changelog.html":{},"index.html":{}}}],["inaccurate",{"_index":208,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["include",{"_index":108,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["included",{"_index":49,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"license.html":{}}}],["includelocs",{"_index":278,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["includes",{"_index":156,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["including",{"_index":766,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":39,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["incoming",{"_index":11,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["index",{"_index":51,"title":{"index.html":{}},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"classes/PipelineError.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":268,"title":{},"body":{"interfaces/FacetStageInterface.html":{}}}],["indexed",{"_index":303,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["indexes",{"_index":308,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["indexofarray",{"_index":570,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["indexofbytes",{"_index":632,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["indexofcp",{"_index":633,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["indexstats",{"_index":387,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"classes/PipelineError.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{}}}],["information",{"_index":213,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["initoptionsinterface",{"_index":352,"title":{"interfaces/InitOptionsInterface.html":{}},"body":{"interfaces/InitOptionsInterface.html":{},"coverage.html":{}}}],["input",{"_index":62,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/StageInterface.html":{}}}],["integer",{"_index":61,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{}},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{},"overview.html":{}}}],["isarray",{"_index":571,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["isnumber",{"_index":669,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["isodayofweek",{"_index":607,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["isoweek",{"_index":608,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["isoweekyear",{"_index":609,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["javascript",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":116,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/StageInterface.html":{}}}],["kilobytes",{"_index":230,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["kilometers",{"_index":290,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["kind",{"_index":787,"title":{},"body":{"license.html":{}}}],["last",{"_index":260,"title":{},"body":{"interfaces/DebugHistoryInterface.html":{},"coverage.html":{},"index.html":{}}}],["lastname",{"_index":725,"title":{},"body":{"index.html":{}}}],["latency",{"_index":210,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["latencystats",{"_index":196,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["latencystats.histograms",{"_index":211,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["legacy",{"_index":319,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["less",{"_index":148,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["lessthan",{"_index":584,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["lessthanequal",{"_index":585,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["liability",{"_index":803,"title":{},"body":{"license.html":{}}}],["liable",{"_index":800,"title":{},"body":{"license.html":{}}}],["lib/.../stage",{"_index":690,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["lib/constants/index.ts",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["lib/environments/index.ts",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["lib/errors/pipeline/pipeline.error.ts",{"_index":367,"title":{},"body":{"classes/PipelineError.html":{},"coverage.html":{}}}],["lib/errors/pipeline/pipeline.error.ts:8",{"_index":371,"title":{},"body":{"classes/PipelineError.html":{}}}],["lib/helpers/commons/index.ts",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["lib/helpers/lookup/index.ts",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["lib/helpers/match/index.ts",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["lib/helpers/project/index.ts",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["lib/interfaces/core/builder",{"_index":164,"title":{},"body":{"interfaces/BuilderOptionsInterface.html":{},"coverage.html":{}}}],["lib/interfaces/core/debug",{"_index":244,"title":{},"body":{"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"coverage.html":{}}}],["lib/interfaces/core/init",{"_index":353,"title":{},"body":{"interfaces/InitOptionsInterface.html":{},"coverage.html":{}}}],["lib/interfaces/core/stage",{"_index":380,"title":{},"body":{"interfaces/StageErrorInterface.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["lib/interfaces/core/stage.interface.ts",{"_index":383,"title":{},"body":{"interfaces/StageInterface.html":{},"coverage.html":{}}}],["lib/interfaces/stages/bucket",{"_index":6,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"coverage.html":{}}}],["lib/interfaces/stages/coll",{"_index":179,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"coverage.html":{}}}],["lib/interfaces/stages/facet",{"_index":266,"title":{},"body":{"interfaces/FacetStageInterface.html":{},"coverage.html":{}}}],["lib/interfaces/stages/geo",{"_index":273,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{},"coverage.html":{}}}],["lib/interfaces/stages/lookup",{"_index":356,"title":{},"body":{"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"coverage.html":{}}}],["lib/main.ts",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["lib/operators/accumulator/index.ts",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["lib/operators/arithmetic/index.ts",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["lib/operators/array/index.ts",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["lib/operators/boolean/index.ts",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["lib/operators/comparison/index.ts",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["lib/operators/conditional/index.ts",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["lib/operators/custom",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["lib/operators/data",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["lib/operators/date/index.ts",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["lib/operators/misc/index.ts",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["lib/operators/set/index.ts",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["lib/operators/string/index.ts",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["lib/operators/trigonometry/index.ts",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["lib/operators/type/index.ts",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["lib/validators/index.ts",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["license",{"_index":746,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":388,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["limitation",{"_index":767,"title":{},"body":{"license.html":{}}}],["limited",{"_index":790,"title":{},"body":{"license.html":{}}}],["limits",{"_index":316,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["list",{"_index":431,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{}}}],["listsessions",{"_index":389,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["literal",{"_index":106,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/StageInterface.html":{},"coverage.html":{},"index.html":{}}}],["localfield",{"_index":363,"title":{},"body":{"interfaces/LookupEqualityPayloadInterface.html":{},"index.html":{}}}],["location",{"_index":295,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["locations",{"_index":301,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["log",{"_index":557,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["log10",{"_index":558,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["logs",{"_index":177,"title":{},"body":{"interfaces/BuilderOptionsInterface.html":{},"interfaces/InitOptionsInterface.html":{}}}],["logsenabled",{"_index":173,"title":{},"body":{"interfaces/BuilderOptionsInterface.html":{},"interfaces/InitOptionsInterface.html":{}}}],["longer",{"_index":348,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["looks",{"_index":310,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["lookup",{"_index":390,"title":{},"body":{"interfaces/StageInterface.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["lookupconditionpayloadinterface",{"_index":355,"title":{"interfaces/LookupConditionPayloadInterface.html":{}},"body":{"interfaces/LookupConditionPayloadInterface.html":{},"coverage.html":{}}}],["lookupequalitypayloadinterface",{"_index":360,"title":{"interfaces/LookupEqualityPayloadInterface.html":{}},"body":{"interfaces/LookupEqualityPayloadInterface.html":{},"coverage.html":{}}}],["lookuppayloadvalidator",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["lower",{"_index":40,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["lowest",{"_index":149,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["ltrim",{"_index":634,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["making",{"_index":702,"title":{},"body":{"index.html":{}}}],["mapoperator",{"_index":572,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["match",{"_index":327,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{},"interfaces/StageInterface.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["matching",{"_index":118,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"classes/PipelineError.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["max",{"_index":546,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["maxdistance",{"_index":279,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["maximum",{"_index":313,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["measurement",{"_index":239,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["merchantability",{"_index":792,"title":{},"body":{"license.html":{}}}],["merge",{"_index":391,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["mergeobjects",{"_index":618,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["message",{"_index":373,"title":{},"body":{"classes/PipelineError.html":{},"interfaces/StageErrorInterface.html":{}}}],["meta",{"_index":619,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["metadata",{"_index":204,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["meters",{"_index":317,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["method",{"_index":446,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["methods",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["mike",{"_index":750,"title":{},"body":{"license.html":{}}}],["millisecond",{"_index":610,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["min",{"_index":547,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["mindistance",{"_index":280,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["minimum",{"_index":322,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["minute",{"_index":611,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["miscellaneous",{"_index":687,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":747,"title":{},"body":{"license.html":{}}}],["mixed",{"_index":131,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["mod",{"_index":559,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["mode",{"_index":176,"title":{},"body":{"interfaces/BuilderOptionsInterface.html":{},"interfaces/InitOptionsInterface.html":{}}}],["modify",{"_index":769,"title":{},"body":{"license.html":{}}}],["modules",{"_index":810,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moment",{"_index":501,"title":{},"body":{"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["mongodb",{"_index":232,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"index.html":{}}}],["month",{"_index":612,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["more",{"_index":309,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{},"index.html":{}}}],["much",{"_index":704,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":300,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["multiply",{"_index":286,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{},"coverage.html":{},"index.html":{}}}],["multiplying",{"_index":291,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["mynewpipeline",{"_index":717,"title":{},"body":{"index.html":{}}}],["name",{"_index":101,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"classes/PipelineError.html":{}}}],["nan",{"_index":80,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["naturallog",{"_index":560,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["near",{"_index":274,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{},"coverage.html":{}}}],["nearsphere",{"_index":336,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["new",{"_index":434,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":406,"title":{},"body":{"interfaces/StageInterface.html":{}}}],["non",{"_index":187,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["none",{"_index":79,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["noninfringement",{"_index":796,"title":{},"body":{"license.html":{}}}],["notable",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["notation",{"_index":285,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["note",{"_index":202,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["notequal",{"_index":586,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["notice",{"_index":781,"title":{},"body":{"license.html":{}}}],["npm",{"_index":711,"title":{},"body":{"index.html":{}}}],["number",{"_index":14,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/StageInterface.html":{}}}],["numberint(30",{"_index":135,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["numberlong(20",{"_index":134,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["numbers",{"_index":73,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["numeric",{"_index":78,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["object",{"_index":34,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"changelog.html":{}}}],["objecttoarray",{"_index":573,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["obtaining",{"_index":758,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":377,"title":{},"body":{"classes/PipelineError.html":{}}}],["once",{"_index":341,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["one",{"_index":143,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["operation",{"_index":145,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"index.html":{}}}],["operator",{"_index":350,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["operators",{"_index":745,"title":{},"body":{"index.html":{}}}],["option",{"_index":298,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["optional",{"_index":53,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"classes/PipelineError.html":{},"interfaces/StageInterface.html":{}}}],["options",{"_index":170,"title":{},"body":{"interfaces/BuilderOptionsInterface.html":{},"interfaces/InitOptionsInterface.html":{}}}],["options.interface.ts",{"_index":165,"title":{},"body":{"interfaces/BuilderOptionsInterface.html":{},"interfaces/InitOptionsInterface.html":{},"coverage.html":{}}}],["order",{"_index":128,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"index.html":{}}}],["otherwise",{"_index":806,"title":{},"body":{"license.html":{}}}],["out",{"_index":392,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["output",{"_index":31,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["outputs",{"_index":191,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["outside",{"_index":323,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["overview",{"_index":811,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":680,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["pair",{"_index":124,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["pairs",{"_index":321,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["param",{"_index":375,"title":{},"body":{"classes/PipelineError.html":{}}}],["parameter",{"_index":734,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":372,"title":{},"body":{"classes/PipelineError.html":{}}}],["part",{"_index":113,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{}}}],["partial",{"_index":354,"title":{},"body":{"interfaces/InitOptionsInterface.html":{}}}],["particular",{"_index":794,"title":{},"body":{"license.html":{}}}],["pass",{"_index":430,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["passes",{"_index":405,"title":{},"body":{"interfaces/StageInterface.html":{}}}],["path",{"_index":99,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["payload",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["payload.interface.ts",{"_index":358,"title":{},"body":{"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"coverage.html":{}}}],["payload_validation_enabled",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["per",{"_index":193,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["permission",{"_index":752,"title":{},"body":{"license.html":{}}}],["permit",{"_index":774,"title":{},"body":{"license.html":{}}}],["person",{"_index":757,"title":{},"body":{"license.html":{}}}],["persons",{"_index":775,"title":{},"body":{"license.html":{}}}],["pipeline",{"_index":257,"title":{},"body":{"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"classes/PipelineError.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["pipelinebuilder",{"_index":541,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["pipelinebuilder('name",{"_index":718,"title":{},"body":{"index.html":{}}}],["pipelineerror",{"_index":365,"title":{"classes/PipelineError.html":{}},"body":{"classes/PipelineError.html":{},"coverage.html":{}}}],["pipelines",{"_index":701,"title":{},"body":{"index.html":{}}}],["planar",{"_index":340,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["plancachestats",{"_index":393,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["point",{"_index":315,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["points",{"_index":335,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["portions",{"_index":784,"title":{},"body":{"license.html":{}}}],["positive",{"_index":58,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["pow",{"_index":561,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["powers",{"_index":74,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["powersof2",{"_index":96,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["pre",{"_index":698,"title":{},"body":{"index.html":{}}}],["predicate",{"_index":331,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["preferred",{"_index":65,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["prefix",{"_index":100,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["profile",{"_index":722,"title":{},"body":{"index.html":{}}}],["profile.availability",{"_index":731,"title":{},"body":{"index.html":{}}}],["profile.skills",{"_index":728,"title":{},"body":{"index.html":{}}}],["profileid",{"_index":723,"title":{},"body":{"index.html":{}}}],["profiles",{"_index":721,"title":{},"body":{"index.html":{}}}],["project",{"_index":359,"title":{},"body":{"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/StageInterface.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["properties",{"_index":52,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"classes/PipelineError.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{}}}],["property",{"_index":424,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{}}}],["provided",{"_index":785,"title":{},"body":{"license.html":{}}}],["provides",{"_index":205,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["publish",{"_index":770,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":795,"title":{},"body":{"license.html":{}}}],["push",{"_index":548,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["queries",{"_index":347,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["query",{"_index":216,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["queryexecstats",{"_index":197,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["quotes",{"_index":105,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["r10",{"_index":83,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["r20",{"_index":84,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["r40",{"_index":85,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["r5",{"_index":82,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["r80",{"_index":86,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["radians",{"_index":289,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["radianstodegrees",{"_index":663,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["radius",{"_index":292,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["rand",{"_index":620,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["range",{"_index":574,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ranges",{"_index":144,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["read",{"_index":330,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{},"index.html":{}}}],["readable",{"_index":703,"title":{},"body":{"index.html":{}}}],["received",{"_index":263,"title":{},"body":{"interfaces/DebugHistoryInterface.html":{}}}],["recorded",{"_index":262,"title":{},"body":{"interfaces/DebugHistoryInterface.html":{}}}],["redact",{"_index":394,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["reduce",{"_index":575,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["regarding",{"_index":182,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["regexfind",{"_index":635,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["regexfindall",{"_index":636,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["regexmatch",{"_index":637,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["release",{"_index":699,"title":{},"body":{"index.html":{}}}],["replaceall",{"_index":638,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["replaceone",{"_index":639,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["replaceroot",{"_index":395,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["replacewith",{"_index":396,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["replica",{"_index":185,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["represented",{"_index":29,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["representing",{"_index":167,"title":{},"body":{"interfaces/BuilderOptionsInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/InitOptionsInterface.html":{}}}],["request",{"_index":744,"title":{},"body":{"index.html":{}}}],["require",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["resolve",{"_index":140,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["restriction",{"_index":765,"title":{},"body":{"license.html":{}}}],["result",{"_index":117,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"classes/PipelineError.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["results",{"_index":119,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"classes/PipelineError.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":201,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["returned",{"_index":161,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["returns",{"_index":159,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["reversearray",{"_index":576,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["rights",{"_index":768,"title":{},"body":{"license.html":{}}}],["round",{"_index":72,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"coverage.html":{},"index.html":{}}}],["rtrim",{"_index":640,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["same",{"_index":129,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["sample",{"_index":397,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["samplerate",{"_index":621,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["save",{"_index":253,"title":{},"body":{"interfaces/DebugHistoryInterface.html":{},"index.html":{}}}],["scale",{"_index":220,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["script",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":398,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["second",{"_index":613,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["see",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":772,"title":{},"body":{"license.html":{}}}],["semantics",{"_index":337,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["sequence",{"_index":697,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["series",{"_index":47,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["set",{"_index":186,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["setdifference",{"_index":625,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["setequals",{"_index":626,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["setintersection",{"_index":627,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["setissubset",{"_index":628,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["setunion",{"_index":629,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["shall",{"_index":782,"title":{},"body":{"license.html":{}}}],["shard",{"_index":194,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["sharded",{"_index":188,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["sign",{"_index":103,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["simplify",{"_index":700,"title":{},"body":{"index.html":{}}}],["sin",{"_index":664,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["single",{"_index":192,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["sinh",{"_index":665,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["size",{"_index":223,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"coverage.html":{},"index.html":{}}}],["size/index.ts",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["sizes",{"_index":226,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["skills",{"_index":727,"title":{},"body":{"index.html":{}}}],["skip",{"_index":399,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["slice",{"_index":577,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["software",{"_index":760,"title":{},"body":{"license.html":{}}}],["sometimes",{"_index":207,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["soon",{"_index":740,"title":{},"body":{"index.html":{}}}],["sort",{"_index":400,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["sortbycount",{"_index":401,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"classes/PipelineError.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{}}}],["specific",{"_index":13,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["specification",{"_index":157,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["specified",{"_index":19,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["specifies",{"_index":35,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["specify",{"_index":98,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["spherical",{"_index":281,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["split",{"_index":641,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["sqrt",{"_index":562,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["stage",{"_index":121,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/StageInterface.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stage.interface",{"_index":264,"title":{},"body":{"interfaces/DebugHistoryInterface.html":{}}}],["stage.interface.ts",{"_index":8,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"coverage.html":{}}}],["stage.interface.ts:6",{"_index":270,"title":{},"body":{"interfaces/FacetStageInterface.html":{}}}],["stageerrorinterface",{"_index":379,"title":{"interfaces/StageErrorInterface.html":{}},"body":{"interfaces/StageErrorInterface.html":{},"coverage.html":{}}}],["stageinterface",{"_index":259,"title":{"interfaces/StageInterface.html":{}},"body":{"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/StageInterface.html":{},"coverage.html":{}}}],["stagelabel",{"_index":814,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["stages",{"_index":692,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["stagetype",{"_index":382,"title":{},"body":{"interfaces/StageErrorInterface.html":{}}}],["stagetypeenum",{"_index":689,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["standard",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["started",{"_index":408,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":261,"title":{},"body":{"interfaces/DebugHistoryInterface.html":{}}}],["statements",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["statistics",{"_index":181,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["stats",{"_index":180,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"coverage.html":{}}}],["status",{"_index":248,"title":{},"body":{"interfaces/DebugBuildInterface.html":{}}}],["stddevpop",{"_index":549,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["stddevsamp",{"_index":550,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["storage",{"_index":218,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["storagestats",{"_index":198,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["strcasecmp",{"_index":642,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["string",{"_index":64,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/FacetStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"classes/PipelineError.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{}}}],["strlenbytes",{"_index":643,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["strlencp",{"_index":644,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["subject",{"_index":777,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":771,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":783,"title":{},"body":{"license.html":{}}}],["substr",{"_index":645,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["substrbytes",{"_index":646,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["substrcp",{"_index":647,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["subtract",{"_index":563,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["such",{"_index":133,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{}}}],["sum",{"_index":114,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"coverage.html":{},"index.html":{}}}],["super(message",{"_index":376,"title":{},"body":{"classes/PipelineError.html":{}}}],["suppported",{"_index":81,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{}}}],["switch",{"_index":590,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["syntax",{"_index":328,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{},"index.html":{}}}],["table",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["tan",{"_index":666,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tanh",{"_index":667,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["test",{"_index":708,"title":{},"body":{"index.html":{}}}],["those",{"_index":237,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["through",{"_index":696,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["throws",{"_index":146,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["timezone",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["tobool",{"_index":670,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["todate",{"_index":614,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["todecimal",{"_index":671,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["todouble",{"_index":672,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["toint",{"_index":673,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tolong",{"_index":674,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tolower",{"_index":648,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["toobjectid",{"_index":675,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tort",{"_index":805,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":649,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["total",{"_index":200,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["toupper",{"_index":650,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["trim",{"_index":651,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["true",{"_index":215,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["trunc",{"_index":564,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["two",{"_index":126,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["type",{"_index":56,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/BuilderOptionsInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugBuildInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"interfaces/InitOptionsInterface.html":{},"interfaces/LookupConditionPayloadInterface.html":{},"interfaces/LookupEqualityPayloadInterface.html":{},"classes/PipelineError.html":{},"interfaces/StageErrorInterface.html":{},"interfaces/StageInterface.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["type.interface.ts",{"_index":535,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":812,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":132,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["unionwith",{"_index":402,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["uniquedocs",{"_index":282,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["unit",{"_index":238,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["unless",{"_index":155,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["unset",{"_index":403,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["unspecified",{"_index":139,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["unwind",{"_index":404,"title":{},"body":{"interfaces/StageInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["upper",{"_index":43,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{}}}],["usage",{"_index":713,"title":{},"body":{"index.html":{}}}],["use",{"_index":66,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":296,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["useful",{"_index":299,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["userid",{"_index":720,"title":{},"body":{"index.html":{}}}],["uses",{"_index":233,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["using",{"_index":326,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["usual",{"_index":329,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{}}}],["valid",{"_index":733,"title":{},"body":{"index.html":{}}}],["valid_stage_list",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["validator",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":141,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"interfaces/CollStatsStageInterface.html":{},"interfaces/DebugHistoryInterface.html":{},"interfaces/GeoNearStageInterface.html":{},"classes/PipelineError.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["values",{"_index":77,"title":{},"body":{"interfaces/BucketAutoStageInterface.html":{},"interfaces/BucketStageInterface.html":{},"interfaces/DebugHistoryInterface.html":{}}}],["variable",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["various",{"_index":222,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["verify",{"_index":710,"title":{},"body":{"index.html":{}}}],["version",{"_index":345,"title":{},"body":{"interfaces/GeoNearStageInterface.html":{},"changelog.html":{}}}],["view",{"_index":184,"title":{},"body":{"interfaces/CollStatsStageInterface.html":{}}}],["warranties",{"_index":791,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":786,"title":{},"body":{"license.html":{}}}],["week",{"_index":615,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["whether",{"_index":804,"title":{},"body":{"license.html":{}}}],["whose",{"_index":137,"title":{},"body":{"interfaces/BucketStageInterface.html":{}}}],["within",{"_index":142,"title":{},"body":{"interfaces/BucketStageInterface.html":{},"interfaces/GeoNearStageInterface.html":{}}}],["without",{"_index":764,"title":{},"body":{"license.html":{}}}],["year",{"_index":616,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["yes",{"_index":374,"title":{},"body":{"classes/PipelineError.html":{}}}],["zip",{"_index":578,"title":{},"body":{"coverage.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BucketAutoStageInterface.html":{"url":"interfaces/BucketAutoStageInterface.html","title":"interface - BucketAutoStageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BucketAutoStageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/stages/bucket-auto-stage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Categorizes incoming documents into a specific number of groups, called buckets, based on a specified expression.\nBucket boundaries are automatically determined in an attempt to evenly distribute the documents into the specified\nnumber of buckets.\nEach bucket is represented as a document in the output. The document for each bucket contains:\nAn _id object that specifies the bounds of the bucket.\nThe _id.min field specifies the inclusive lower bound for the bucket.\nThe _id.max field specifies the upper bound for the bucket. This bound is exclusive for all buckets except the final\nbucket in the series, where it is inclusive.\nA count field that contains the number of documents in the bucket. The count field is included by default when the\noutput document is not specified.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        buckets\n                                \n                                \n                                            Optional\n                                        granularity\n                                \n                                \n                                        groupBy\n                                \n                                \n                                            Optional\n                                        output\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buckets\n                                    \n                                \n                                \n                                    \n                                        buckets:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A positive 32-bit integer that specifies the number of buckets into which input documents are grouped.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        granularity\n                                    \n                                \n                                \n                                    \n                                        granularity:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. A string that specifies the preferred number series to use to ensure that the calculated boundary edges\nend on preferred round numbers or their powers of 10.\nAvailable only if the all groupBy values are numeric and none of them are NaN.\nThe suppported values of granularity are:\n\"R5\"\n\"R10\"\n\"R20\"\n\"R40\"\n\"R80\"\n\"1-2-5\"\n\"E6\"\n\"E12\"\n\"E24\"\n\"E48\"\n\"E96\"\n\"E192\"\n\"POWERSOF2\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupBy\n                                    \n                                \n                                \n                                    \n                                        groupBy:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An expression to group documents by. To specify a field path, prefix the field name with a dollar sign $ and\nenclose it in quotes.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                    \n                                \n                                \n                                    \n                                        output:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. A document that specifies the fields to include in the output documents in addition to the _id field.\nTo specify the field to include, you must use accumulator expressions:\n: { :  },\n...\nThe default count field is not included in the output document when output is specified. Explicitly specify the\ncount expression as part of the output document to include it:\noutput: {\n: { :  },\n...\ncount: { $sum: 1 }\n}\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface BucketAutoStageInterface {\n    /**\n     * An expression to group documents by. To specify a field path, prefix the field name with a dollar sign $ and\n     * enclose it in quotes.\n     */\n    groupBy: any;\n    /**\n     * A positive 32-bit integer that specifies the number of buckets into which input documents are grouped.\n     */\n    buckets: number;\n    /**\n     * Optional. A document that specifies the fields to include in the output documents in addition to the _id field.\n     * To specify the field to include, you must use accumulator expressions:\n     *\n     * : { :  },\n     *\n     * ...\n     *\n     * The default count field is not included in the output document when output is specified. Explicitly specify the\n     * count expression as part of the output document to include it:\n     *\n     * output: {\n     *\n     * : { :  },\n     *\n     * ...\n     *\n     * count: { $sum: 1 }\n     *\n     * }\n     */\n    output?: {\n        [key: string]: any;\n    };\n    /**\n     * Optional. A string that specifies the preferred number series to use to ensure that the calculated boundary edges\n     * end on preferred round numbers or their powers of 10.\n     *\n     * Available only if the all groupBy values are numeric and none of them are NaN.\n     *\n     * The suppported values of granularity are:\n     *\n     * \"R5\"\n     * \"R10\"\n     * \"R20\"\n     * \"R40\"\n     * \"R80\"\n     * \"1-2-5\"\n     * \"E6\"\n     * \"E12\"\n     * \"E24\"\n     * \"E48\"\n     * \"E96\"\n     * \"E192\"\n     * \"POWERSOF2\"\n     */\n    granularity?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BucketStageInterface.html":{"url":"interfaces/BucketStageInterface.html","title":"interface - BucketStageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BucketStageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/stages/bucket-stage.interface.ts\n        \n\n            \n                Description\n            \n            \n                The Bucket Stage Interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        boundaries\n                                \n                                \n                                            Optional\n                                        default\n                                \n                                \n                                        groupBy\n                                \n                                \n                                            Optional\n                                        output\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        boundaries\n                                    \n                                \n                                \n                                    \n                                        boundaries:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An array of values based on the groupBy expression that specify the boundaries for each bucket. Each adjacent\npair of values acts as the inclusive lower boundary and the exclusive upper boundary for the bucket. You must\nspecify at least two boundaries.\nThe specified values must be in ascending order and all of the same type. The exception is if the values are of\nmixed numeric types, such as:\n[ 10, NumberLong(20), NumberInt(30) ]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. A literal that specifies the _id of an additional bucket that contains all documents whose groupBy\nexpression result does not fall into a bucket specified by boundaries.\nIf unspecified, each input document must resolve the groupBy expression to a value within one of the bucket\nranges specified by boundaries or the operation throws an error.\nThe default value must be less than the lowest boundaries value, or greater than or equal to the highest\nboundaries value.\nThe default value can be of a different type than the entries in boundaries.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupBy\n                                    \n                                \n                                \n                                    \n                                        groupBy:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An expression to group documents by. To specify a field path, prefix the field name with a dollar sign $ and\nenclose it in quotes.\nUnless $bucket includes a default specification, each input document must resolve the groupBy field path or\nexpression to a value that falls within one of the ranges specified by the boundaries.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                    \n                                \n                                \n                                    \n                                        output:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. A document that specifies the fields to include in the output documents in addition to the _id field.\nTo specify the field to include, you must use accumulator expressions.\n: { :  },\n...\n: { :  }\nIf you do not specify an output document, the operation returns a count field containing the number of documents\nin each bucket.\nIf you specify an output document, only the fields specified in the document are returned; i.e. the count field\nis not returned unless it is explicitly included in the output document.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface BucketStageInterface {\n    /**\n     * An expression to group documents by. To specify a field path, prefix the field name with a dollar sign $ and\n     * enclose it in quotes.\n     *\n     * Unless $bucket includes a default specification, each input document must resolve the groupBy field path or\n     * expression to a value that falls within one of the ranges specified by the boundaries.\n     */\n    groupBy: any;\n    /**\n     * An array of values based on the groupBy expression that specify the boundaries for each bucket. Each adjacent\n     * pair of values acts as the inclusive lower boundary and the exclusive upper boundary for the bucket. You must\n     * specify at least two boundaries.\n     *\n     * The specified values must be in ascending order and all of the same type. The exception is if the values are of\n     * mixed numeric types, such as:\n     *\n     * [ 10, NumberLong(20), NumberInt(30) ]\n     */\n    boundaries: any[];\n    /**\n     * Optional. A literal that specifies the _id of an additional bucket that contains all documents whose groupBy\n     * expression result does not fall into a bucket specified by boundaries.\n     *\n     * If unspecified, each input document must resolve the groupBy expression to a value within one of the bucket\n     * ranges specified by boundaries or the operation throws an error.\n     *\n     * The default value must be less than the lowest boundaries value, or greater than or equal to the highest\n     * boundaries value.\n     *\n     * The default value can be of a different type than the entries in boundaries.\n     */\n    default?: any;\n    /**\n     * Optional. A document that specifies the fields to include in the output documents in addition to the _id field.\n     * To specify the field to include, you must use accumulator expressions.\n     *\n     * : { :  },\n     *\n     * ...\n     *\n     * : { :  }\n     *\n     * If you do not specify an output document, the operation returns a count field containing the number of documents\n     * in each bucket.\n     *\n     * If you specify an output document, only the fields specified in the document are returned; i.e. the count field\n     * is not returned unless it is explicitly included in the output document.\n     */\n    output?: {\n        [key: string]: { [key: string]: any };\n    };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuilderOptionsInterface.html":{"url":"interfaces/BuilderOptionsInterface.html","title":"interface - BuilderOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BuilderOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/core/builder-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                Contract representing a full builder's options bundle\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        debug\n                                \n                                \n                                        logsEnabled\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A boolean to activate or not the debug mode\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logsEnabled\n                                    \n                                \n                                \n                                    \n                                        logsEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A boolean to activate or not the logs\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface BuilderOptionsInterface {\n    /**\n     * A boolean to activate or not the debug mode\n     */\n    debug: boolean;\n    /**\n     * A boolean to activate or not the logs\n     */\n    logsEnabled: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollStatsStageInterface.html":{"url":"interfaces/CollStatsStageInterface.html","title":"interface - CollStatsStageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CollStatsStageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/stages/coll-stats-stage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Returns statistics regarding a collection or view.\nFor a collection in a replica set or a non-sharded collection in a cluster, $collStats outputs a single document.\nFor a sharded collection, $collStats outputs one document per shard.\nhttps://docs.mongodb.com/manual/reference/operator/aggregation/collStats/\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        latencyStats\n                                \n                                \n                                        queryExecStats\n                                \n                                \n                                        storageStats\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Adds the total number of documents in the collection to the return document.\nNOTE\nThe count is based on the collection’s metadata, which provides a fast but sometimes inaccurate count for\nsharded clusters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latencyStats\n                                    \n                                \n                                \n                                    \n                                        latencyStats:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Adds latency statistics to the return document.\nlatencyStats.histograms    Adds latency histogram information to the embedded documents in latencyStats if true.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryExecStats\n                                    \n                                \n                                \n                                    \n                                        queryExecStats:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Adds query execution statistics to the return document.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageStats\n                                    \n                                \n                                \n                                    \n                                        storageStats:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Adds storage statistics to the return document.\nSpecify an empty document (i.e. storageStats: {}) to use the default scale factor of 1 for the various size data.\nScale factor of 1 displays the returned sizes in bytes.\nSpecify the scale factor (i.e. storageStats: { scale:  }) to use the specified scale factor for the\nvarious size data. For example, to display kilobytes rather than bytes, specify a scale value of 1024.\nIf you specify a non-integer scale factor, MongoDB uses the integer part of the specified factor. For example,\nif you specify a scale factor of 1023.999, MongoDB uses 1023 as the scale factor.\nThe scale factor does not affect those sizes that specify the unit of measurement in the field name, such as\n\"bytes currently in the cache\".\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CollStatsStageInterface {\n    /**\n     * Adds latency statistics to the return document.\n     *\n     * latencyStats.histograms\tAdds latency histogram information to the embedded documents in latencyStats if true.\n     */\n    latencyStats: { histograms: boolean; };\n    /**\n     * Adds storage statistics to the return document.\n     *\n     * Specify an empty document (i.e. storageStats: {}) to use the default scale factor of 1 for the various size data.\n     * Scale factor of 1 displays the returned sizes in bytes.\n     *\n     * Specify the scale factor (i.e. storageStats: { scale:  }) to use the specified scale factor for the\n     * various size data. For example, to display kilobytes rather than bytes, specify a scale value of 1024.\n     *\n     * If you specify a non-integer scale factor, MongoDB uses the integer part of the specified factor. For example,\n     * if you specify a scale factor of 1023.999, MongoDB uses 1023 as the scale factor.\n     *\n     * The scale factor does not affect those sizes that specify the unit of measurement in the field name, such as\n     * \"bytes currently in the cache\".\n     */\n    storageStats: { scale: number; };\n    /**\n     * Adds the total number of documents in the collection to the return document.\n     *\n     * NOTE\n     *\n     * The count is based on the collection’s metadata, which provides a fast but sometimes inaccurate count for\n     * sharded clusters.\n     */\n    count: any;\n    /**\n     * Adds query execution statistics to the return document.\n     */\n    queryExecStats: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DebugBuildInterface.html":{"url":"interfaces/DebugBuildInterface.html","title":"interface - DebugBuildInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DebugBuildInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/core/debug-build.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface representing the complete debug object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        historyList\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        historyList\n                                    \n                                \n                                \n                                    \n                                        historyList:         DebugHistoryInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DebugHistoryInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    historyList\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    status\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {DebugHistoryInterface} from \"./debug-history.interface\";\n\n/**\n * Interface representing the complete debug object\n */\nexport interface DebugBuildInterface {\n    /**\n     * status\n     */\n    status: boolean;\n    /**\n     * historyList\n     */\n    historyList: DebugHistoryInterface[]\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DebugHistoryInterface.html":{"url":"interfaces/DebugHistoryInterface.html","title":"interface - DebugHistoryInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DebugHistoryInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/core/debug-history.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface representing a save of a builder action\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        date\n                                \n                                \n                                            Optional\n                                        pipeline\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the action\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current date of the action\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pipeline\n                                    \n                                \n                                \n                                    \n                                        pipeline:         StageInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StageInterface[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The last state of the pipeline when the action was recorded\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The last values received\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {StageInterface} from \"./stage.interface\";\n\n/**\n * Interface representing a save of a builder action\n */\nexport interface DebugHistoryInterface {\n    /**\n     * The current date of the action\n     */\n    date: string;\n    /**\n     * The name of the action\n     */\n    action: string;\n    /**\n     * The last values received\n     */\n    value?: any;\n    /**\n     * The last state of the pipeline when the action was recorded\n     */\n    pipeline?: StageInterface[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FacetStageInterface.html":{"url":"interfaces/FacetStageInterface.html","title":"interface - FacetStageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FacetStageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/stages/facet-stage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Facet Stage Interface\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        StageInterface[]\n\n                    \n                \n                        \n                            \n                                Defined in lib/interfaces/stages/facet-stage.interface.ts:6\n                            \n                        \n                \n                    \n                        Specify the output field name for each specified pipeline.\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {StageInterface} from \"../core/stage.interface\";\n\n/**\n * Facet Stage Interface\n */\nexport interface FacetStageInterface {\n    /**\n     * Specify the output field name for each specified pipeline.\n     */\n    [key: string]: StageInterface[]\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoNearStageInterface.html":{"url":"interfaces/GeoNearStageInterface.html","title":"interface - GeoNearStageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoNearStageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/stages/geo-near-stage.interface.ts\n        \n\n            \n                Description\n            \n            \n                GeoNear Stage Interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distanceField\n                                \n                                \n                                            Optional\n                                        distanceMultiplier\n                                \n                                \n                                            Optional\n                                        includeLocs\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        maxDistance\n                                \n                                \n                                            Optional\n                                        minDistance\n                                \n                                \n                                        near\n                                \n                                \n                                            Optional\n                                        query\n                                \n                                \n                                            Optional\n                                        spherical\n                                \n                                \n                                            Optional\n                                        uniqueDocs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distanceField\n                                    \n                                \n                                \n                                    \n                                        distanceField:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The output field that contains the calculated distance. To specify a field within an embedded document, use dot\nnotation.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distanceMultiplier\n                                    \n                                \n                                \n                                    \n                                        distanceMultiplier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. The factor to multiply all distances returned by the query. For example, use the distanceMultiplier to\nconvert radians, as returned by a spherical query, to kilometers by multiplying by the radius of the Earth.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeLocs\n                                    \n                                \n                                \n                                    \n                                        includeLocs:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. This specifies the output field that identifies the location used to calculate the distance. This\noption is useful when a location field contains multiple locations. To specify a field within an embedded\ndocument, use dot notation.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. Specify the geospatial indexed field to use when calculating the distance.\nIf your collection has multiple 2d and/or multiple 2dsphere indexes, you must use the key option to specify the\nindexed field path to use. Specify Which Geospatial Index to Use provides a full example.\nIf there is more than one 2d index or more than one 2dsphere index and you do not specify a key, MongoDB will\nreturn an error.\nIf you do not specify the key, and you have at most only one 2d index and/or only one 2dsphere index, MongoDB\nlooks first for a 2d index to use. If a 2d index does not exists, then MongoDB looks for a 2dsphere index to use.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDistance\n                                    \n                                \n                                \n                                    \n                                        maxDistance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. The maximum distance from the center point that the documents can be. MongoDB limits the results to\nthose documents that fall within the specified distance from the center point.\nSpecify the distance in meters if the specified point is GeoJSON and in radians if the specified point is legacy\ncoordinate pairs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDistance\n                                    \n                                \n                                \n                                    \n                                        minDistance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. The minimum distance from the center point that the documents can be. MongoDB limits the results to\nthose documents that fall outside the specified distance from the center point.\nSpecify the distance in meters for GeoJSON data and in radians for legacy coordinate pairs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        near\n                                    \n                                \n                                \n                                    \n                                        near:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The point for which to find the closest documents.\nIf using a 2dsphere index, you can specify the point as either a GeoJSON point or legacy coordinate pair.\nIf using a 2d index, specify the point as a legacy coordinate pair.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. Limits the results to the documents that match the query. The query syntax is the usual MongoDB read\noperation query syntax.\nYou cannot specify a $near predicate in the query field of the $geoNear stage.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spherical\n                                    \n                                \n                                \n                                    \n                                        spherical:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. Determines how MongoDB calculates the distance between two points:\nWhen true, MongoDB uses $nearSphere semantics and calculates distances using spherical geometry.\nWhen false, MongoDB uses $near semantics: spherical geometry for 2dsphere indexes and planar geometry for 2d\nindexes.\nDefault: false.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uniqueDocs\n                                    \n                                \n                                \n                                    \n                                        uniqueDocs:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. If this value is true, the query returns a matching document once, even if more than one of the\ndocument’s location fields match the query.\nDeprecated since version 2.6: Geospatial queries no longer return duplicate results. The $uniqueDocs operator\nhas no impact on results.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface GeoNearStageInterface {\n    /**\n     * The point for which to find the closest documents.\n     * If using a 2dsphere index, you can specify the point as either a GeoJSON point or legacy coordinate pair.\n     *\n     * If using a 2d index, specify the point as a legacy coordinate pair.\n     */\n    near: any;\n    /**\n     * The output field that contains the calculated distance. To specify a field within an embedded document, use dot\n     * notation.\n     */\n    distanceField: string;\n    /**\n     * Optional. Determines how MongoDB calculates the distance between two points:\n     *\n     * When true, MongoDB uses $nearSphere semantics and calculates distances using spherical geometry.\n     * When false, MongoDB uses $near semantics: spherical geometry for 2dsphere indexes and planar geometry for 2d\n     * indexes.\n     *\n     * Default: false.\n     */\n    spherical?: boolean;\n    /**\n     * Optional. The maximum distance from the center point that the documents can be. MongoDB limits the results to\n     * those documents that fall within the specified distance from the center point.\n     *\n     * Specify the distance in meters if the specified point is GeoJSON and in radians if the specified point is legacy\n     * coordinate pairs.\n     */\n    maxDistance?: number;\n    /**\n     * Optional. Limits the results to the documents that match the query. The query syntax is the usual MongoDB read\n     * operation query syntax.\n     *\n     * You cannot specify a $near predicate in the query field of the $geoNear stage.\n     */\n    query?: any;\n    /**\n     * Optional. The factor to multiply all distances returned by the query. For example, use the distanceMultiplier to\n     * convert radians, as returned by a spherical query, to kilometers by multiplying by the radius of the Earth.\n     */\n    distanceMultiplier?: number;\n    /**\n     * Optional. This specifies the output field that identifies the location used to calculate the distance. This\n     * option is useful when a location field contains multiple locations. To specify a field within an embedded\n     * document, use dot notation.\n     */\n    includeLocs?: string;\n    /**\n     * Optional. If this value is true, the query returns a matching document once, even if more than one of the\n     * document’s location fields match the query.\n     * Deprecated since version 2.6: Geospatial queries no longer return duplicate results. The $uniqueDocs operator\n     * has no impact on results.\n     */\n    uniqueDocs?: boolean;\n    /**\n     * Optional. The minimum distance from the center point that the documents can be. MongoDB limits the results to\n     * those documents that fall outside the specified distance from the center point.\n     * Specify the distance in meters for GeoJSON data and in radians for legacy coordinate pairs.\n     */\n    minDistance?: number;\n    /**\n     * Optional. Specify the geospatial indexed field to use when calculating the distance.\n     *\n     * If your collection has multiple 2d and/or multiple 2dsphere indexes, you must use the key option to specify the\n     * indexed field path to use. Specify Which Geospatial Index to Use provides a full example.\n     * If there is more than one 2d index or more than one 2dsphere index and you do not specify a key, MongoDB will\n     * return an error.\n     *\n     * If you do not specify the key, and you have at most only one 2d index and/or only one 2dsphere index, MongoDB\n     * looks first for a 2d index to use. If a 2d index does not exists, then MongoDB looks for a 2dsphere index to use.\n     */\n    key?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InitOptionsInterface.html":{"url":"interfaces/InitOptionsInterface.html","title":"interface - InitOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InitOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/core/init-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                Contract representing a partial builder's options bundle\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        debug\n                                \n                                \n                                            Optional\n                                        logsEnabled\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A boolean to activate or not the debug mode\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logsEnabled\n                                    \n                                \n                                \n                                    \n                                        logsEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A boolean to activate or not the logs\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface InitOptionsInterface {\n    /**\n     * A boolean to activate or not the debug mode\n     */\n    debug?: boolean;\n    /**\n     * A boolean to activate or not the logs\n     */\n    logsEnabled?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LookupConditionPayloadInterface.html":{"url":"interfaces/LookupConditionPayloadInterface.html","title":"interface - LookupConditionPayloadInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LookupConditionPayloadInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/stages/lookup-condition-payload.interface.ts\n        \n\n            \n                Description\n            \n            \n                interface LookupConditionPayloadInterface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        as\n                                \n                                \n                                        from\n                                \n                                \n                                            Optional\n                                        let\n                                \n                                \n                                            Optional\n                                        pipeline\n                                \n                                \n                                            Optional\n                                        project\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        as\n                                    \n                                \n                                \n                                    \n                                        as:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    as\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    from\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        let\n                                    \n                                \n                                \n                                    \n                                        let:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    let\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pipeline\n                                    \n                                \n                                \n                                    \n                                        pipeline:         StageInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StageInterface[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    pipeline\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        project\n                                    \n                                \n                                \n                                    \n                                        project:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    project\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {StageInterface} from \"../index\";\n\n/**\n * interface LookupConditionPayloadInterface\n */\nexport interface LookupConditionPayloadInterface {\n    /**\n     * from\n     */\n    from: string;\n    /**\n     * let\n     */\n    let?: { [index: string]: string };\n    /**\n     * project\n     */\n    project?: { [index: string]: any };\n    /**\n     * pipeline\n     */\n    pipeline?: StageInterface[];\n    /**\n     * as\n     */\n    as: string\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LookupEqualityPayloadInterface.html":{"url":"interfaces/LookupEqualityPayloadInterface.html","title":"interface - LookupEqualityPayloadInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LookupEqualityPayloadInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/stages/lookup-equality-payload.interface.ts\n        \n\n            \n                Description\n            \n            \n                interface LookupEqualityPayloadInterface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        as\n                                \n                                \n                                        foreignField\n                                \n                                \n                                        from\n                                \n                                \n                                        localField\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        as\n                                    \n                                \n                                \n                                    \n                                        as:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    as\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        foreignField\n                                    \n                                \n                                \n                                    \n                                        foreignField:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    foreignField\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    from\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localField\n                                    \n                                \n                                \n                                    \n                                        localField:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    localField\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LookupEqualityPayloadInterface {\n    /**\n     * from\n     */\n    from: string;\n    /**\n     * localField\n     */\n    localField: string;\n    /**\n     * foreignField\n     */\n    foreignField: string;\n    /**\n     * as\n     */\n    as: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PipelineError.html":{"url":"classes/PipelineError.html","title":"class - PipelineError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PipelineError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/errors/pipeline/pipeline.error.ts\n        \n\n            \n                Description\n            \n            \n                PipelineError\n\n            \n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/errors/pipeline/pipeline.error.ts:8\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'PipelineError'\n                        \n                    \n                        \n                            \n                                    Defined in lib/errors/pipeline/pipeline.error.ts:8\n                            \n                        \n\n                \n                    \n                        name\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PipelineError extends Error {\n    /**\n     * name\n     */\n    name = 'PipelineError';\n\n    /**\n     * constructor\n     * @param message\n     */\n    constructor(message?: string) {\n        super(message ? message : 'An error occurred while building the pipeline.');\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StageErrorInterface.html":{"url":"interfaces/StageErrorInterface.html","title":"interface - StageErrorInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StageErrorInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/core/stage-error.interface.ts\n        \n\n            \n                Description\n            \n            \n                interface StageErrorInterface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        stageType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stageType\n                                    \n                                \n                                \n                                    \n                                        stageType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    stageType\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StageErrorInterface {\n    /**\n     * stageType\n     */\n    stageType: string;\n    /**\n     * message\n     */\n    message: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StageInterface.html":{"url":"interfaces/StageInterface.html","title":"interface - StageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/core/stage.interface.ts\n        \n\n            \n                Description\n            \n            \n                interface StageInterface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        $addFields\n                                \n                                \n                                            Optional\n                                        $bucket\n                                \n                                \n                                            Optional\n                                        $bucketAuto\n                                \n                                \n                                            Optional\n                                        $collStats\n                                \n                                \n                                            Optional\n                                        $count\n                                \n                                \n                                            Optional\n                                        $facet\n                                \n                                \n                                            Optional\n                                        $geoNear\n                                \n                                \n                                            Optional\n                                        $graphLookup\n                                \n                                \n                                            Optional\n                                        $group\n                                \n                                \n                                            Optional\n                                        $indexStats\n                                \n                                \n                                            Optional\n                                        $limit\n                                \n                                \n                                            Optional\n                                        $listSessions\n                                \n                                \n                                            Optional\n                                        $lookup\n                                \n                                \n                                            Optional\n                                        $match\n                                \n                                \n                                            Optional\n                                        $merge\n                                \n                                \n                                            Optional\n                                        $out\n                                \n                                \n                                            Optional\n                                        $planCacheStats\n                                \n                                \n                                            Optional\n                                        $project\n                                \n                                \n                                            Optional\n                                        $redact\n                                \n                                \n                                            Optional\n                                        $replaceRoot\n                                \n                                \n                                            Optional\n                                        $replaceWith\n                                \n                                \n                                            Optional\n                                        $sample\n                                \n                                \n                                            Optional\n                                        $search\n                                \n                                \n                                            Optional\n                                        $set\n                                \n                                \n                                            Optional\n                                        $skip\n                                \n                                \n                                            Optional\n                                        $sort\n                                \n                                \n                                            Optional\n                                        $sortByCount\n                                \n                                \n                                            Optional\n                                        $unionWith\n                                \n                                \n                                            Optional\n                                        $unset\n                                \n                                \n                                            Optional\n                                        $unwind\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $addFields\n                                    \n                                \n                                \n                                    \n                                        $addFields:     literal type | literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type | literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $addFields\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $bucket\n                                    \n                                \n                                \n                                    \n                                        $bucket:         BucketStageInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BucketStageInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $bucket\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $bucketAuto\n                                    \n                                \n                                \n                                    \n                                        $bucketAuto:         BucketAutoStageInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BucketAutoStageInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $bucketAuto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $collStats\n                                    \n                                \n                                \n                                    \n                                        $collStats:         CollStatsStageInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CollStatsStageInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $collStats\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $count\n                                    \n                                \n                                \n                                    \n                                        $count:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $count\nPasses a document to the next stage that contains a count of the number of documents input to the stage.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $facet\n                                    \n                                \n                                \n                                    \n                                        $facet:         FacetStageInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FacetStageInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $facet\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $geoNear\n                                    \n                                \n                                \n                                    \n                                        $geoNear:         GeoNearStageInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GeoNearStageInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $geoNear\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $graphLookup\n                                    \n                                \n                                \n                                    \n                                        $graphLookup:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $graphLookup\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $group\n                                    \n                                \n                                \n                                    \n                                        $group:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $group\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $indexStats\n                                    \n                                \n                                \n                                    \n                                        $indexStats:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $indexStats\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $limit\n                                    \n                                \n                                \n                                    \n                                        $limit:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $limit\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $listSessions\n                                    \n                                \n                                \n                                    \n                                        $listSessions:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $listSessions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $lookup\n                                    \n                                \n                                \n                                    \n                                        $lookup:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $lookup\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $match\n                                    \n                                \n                                \n                                    \n                                        $match:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $match\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $merge\n                                    \n                                \n                                \n                                    \n                                        $merge:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $merge\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $out\n                                    \n                                \n                                \n                                    \n                                        $out:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $out\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $planCacheStats\n                                    \n                                \n                                \n                                    \n                                        $planCacheStats:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $planCacheStats\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $project\n                                    \n                                \n                                \n                                    \n                                        $project:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $project\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $redact\n                                    \n                                \n                                \n                                    \n                                        $redact:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $redact\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $replaceRoot\n                                    \n                                \n                                \n                                    \n                                        $replaceRoot:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $replaceRoot\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $replaceWith\n                                    \n                                \n                                \n                                    \n                                        $replaceWith:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $replaceWith\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $sample\n                                    \n                                \n                                \n                                    \n                                        $sample:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $sample\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $search\n                                    \n                                \n                                \n                                    \n                                        $search:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $search\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $set\n                                    \n                                \n                                \n                                    \n                                        $set:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $set\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $skip\n                                    \n                                \n                                \n                                    \n                                        $skip:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $skip\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $sort\n                                    \n                                \n                                \n                                    \n                                        $sort:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $sort\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $sortByCount\n                                    \n                                \n                                \n                                    \n                                        $sortByCount:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $sortByCount\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $unionWith\n                                    \n                                \n                                \n                                    \n                                        $unionWith:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $unionWith\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $unset\n                                    \n                                \n                                \n                                    \n                                        $unset:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $unset\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $unwind\n                                    \n                                \n                                \n                                    \n                                        $unwind:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    $unwind\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    BucketStageInterface,\n    BucketAutoStageInterface,\n    CollStatsStageInterface,\n    FacetStageInterface,\n    GeoNearStageInterface\n} from \"../\";\n\n/**\n * interface StageInterface\n */\nexport interface StageInterface {\n    /**\n     * $addFields\n     */\n    $addFields?: { [key: string]: any; } | { [key: string]: any; }[];\n    /**\n     * $bucket\n     */\n    $bucket?: BucketStageInterface;\n    /**\n     * $bucketAuto\n     */\n    $bucketAuto?: BucketAutoStageInterface;\n    /**\n     * $collStats\n     */\n    $collStats?: CollStatsStageInterface;\n    /**\n     * $count\n     * Passes a document to the next stage that contains a count of the number of documents input to the stage.\n     */\n    $count?: string;\n    /**\n     * $facet\n     */\n    $facet?: FacetStageInterface;\n    /**\n     * $geoNear\n     */\n    $geoNear?: GeoNearStageInterface;\n    /**\n     * $graphLookup\n     */\n    $graphLookup?: any;\n    /**\n     * $group\n     */\n    $group?: any;\n    /**\n     * $indexStats\n     */\n    $indexStats?: any;\n    /**\n     * $limit\n     */\n    $limit?: any;\n    /**\n     * $listSessions\n     */\n    $listSessions?: any;\n    /**\n     * $lookup\n     */\n    $lookup?: any;\n    /**\n     * $match\n     */\n    $match?: any;\n    /**\n     * $merge\n     */\n    $merge?: any;\n    /**\n     * $out\n     */\n    $out?: any;\n    /**\n     * $planCacheStats\n     */\n    $planCacheStats?: any;\n    /**\n     * $project\n     */\n    $project?: any;\n    /**\n     * $redact\n     */\n    $redact?: any;\n    /**\n     * $replaceRoot\n     */\n    $replaceRoot?: any;\n    /**\n     * $replaceWith\n     */\n    $replaceWith?: any;\n    /**\n     * $sample\n     */\n    $sample?: any;\n    /**\n     * $search\n     */\n    $search?: any;\n    /**\n     * $set\n     */\n    $set?: any;\n    /**\n     * $skip\n     */\n    $skip?: any;\n    /**\n     * $sort\n     */\n    $sort?: any;\n    /**\n     * $sortByCount\n     */\n    $sortByCount?: any;\n    /**\n     * $unionWith\n     */\n    $unionWith?: any;\n    /**\n     * $unset\n     */\n    $unset?: any;\n    /**\n     * $unwind\n     */\n    $unwind?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.0.2-67 (2021-03-20)\nFeatures\n\nadd Property helper to create a javascript object (62855da)\nadd the ability to pass an object or a list to AddFields (9c97026)\n\n0.0.2-66 (2021-03-20)\nFeatures\n\nadd new helper List (8dc7919)\n\n0.0.2-65 (2021-03-20)\n0.0.2-64 (2021-03-20)\n0.0.2-63 (2021-03-20)\nFeatures\n\nadd payload validator (6c243e1)\nimplement all the stage methods as an alias of the addStage method (b4066e0)\n\n0.0.2-62 (2021-03-19)\nFeatures\n\nimplement Lookup, Match and Project method of the pipeline builder (9b859cf)\n\n0.0.2-61 (2021-03-19)\n0.0.2-60 (2021-03-19)\n0.0.2-59 (2021-03-18)\n0.0.2-58 (2021-03-18)\n0.0.2-56 (2021-03-18)\n0.0.2-55 (2021-03-18)\n0.0.2-54 (2021-03-18)\n0.0.2-53 (2021-03-18)\n0.0.2-52 (2021-03-18)\n0.0.2-51 (2021-03-18)\n0.0.2-50 (2021-03-18)\n0.0.2-49 (2021-03-18)\n0.0.2-48 (2021-03-18)\n0.0.2-47 (2021-03-18)\n0.0.2-46 (2021-03-18)\n0.0.2-45 (2021-03-18)\n0.0.2-44 (2021-03-18)\n0.0.2-43 (2021-03-18)\n0.0.2-42 (2021-03-18)\n0.0.2-41 (2021-03-18)\n0.0.2-40 (2021-03-18)\n0.0.2-39 (2021-03-17)\n0.0.2-38 (2021-03-17)\n0.0.2-37 (2021-03-17)\n0.0.2-36 (2021-03-17)\n0.0.2-35 (2021-03-17)\n0.0.2-34 (2021-03-17)\n0.0.2-33 (2021-03-17)\n0.0.2-32 (2021-03-17)\n0.0.2-31 (2021-03-17)\n0.0.2-30 (2021-03-17)\n0.0.2-29 (2021-03-17)\n0.0.2-28 (2021-03-17)\n0.0.2-27 (2021-03-17)\n0.0.2-26 (2021-03-17)\n0.0.2-25 (2021-03-17)\n0.0.2-24 (2021-03-17)\n0.0.2-23 (2021-03-17)\n0.0.2-22 (2021-03-17)\n0.0.2-21 (2021-03-17)\n0.0.2-20 (2021-03-17)\n0.0.2-19 (2021-03-17)\n0.0.2-18 (2021-03-17)\n0.0.2-17 (2021-03-17)\n0.0.2-16 (2021-03-17)\n0.0.2-15 (2021-03-17)\n0.0.2-14 (2021-03-17)\n0.0.2-13 (2021-03-17)\n0.0.2-12 (2021-03-17)\n0.0.2-11 (2021-03-17)\n0.0.2-10 (2021-03-17)\nBug Fixes\n\nchange import moment to require moment (826ac37)\n\n0.0.2-alpha.7 (2021-03-16)\n0.0.2-alpha.5 (2021-03-16)\n0.0.2-alpha.4 (2021-03-16)\n0.0.2-alpha.3 (2021-03-16)\nBug Fixes\n\nbuild script (281fb81)\n\n0.0.2-alpha.2 (2021-03-16)\n0.0.2-alpha.1 (2021-03-16)\n0.0.2-alpha.0 (2021-03-15)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                lib/constants/index.ts\n            \n            variable\n            DATE_FORMAT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/constants/index.ts\n            \n            variable\n            PAYLOAD_VALIDATION_ENABLED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/constants/index.ts\n            \n            variable\n            VALID_STAGE_LIST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/environments/index.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/errors/pipeline/pipeline.error.ts\n            \n            class\n            PipelineError\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                lib/helpers/commons/index.ts\n            \n            variable\n            List\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/helpers/commons/index.ts\n            \n            variable\n            Property\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/helpers/lookup/index.ts\n            \n            variable\n            ConditionPayload\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/helpers/lookup/index.ts\n            \n            variable\n            EqualityPayload\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/helpers/match/index.ts\n            \n            variable\n            Expression\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/helpers/match/index.ts\n            \n            variable\n            Field\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/helpers/project/index.ts\n            \n            variable\n            Ignore\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/helpers/project/index.ts\n            \n            variable\n            Only\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/interfaces/core/builder-options.interface.ts\n            \n            interface\n            BuilderOptionsInterface\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                lib/interfaces/core/debug-build.interface.ts\n            \n            interface\n            DebugBuildInterface\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                lib/interfaces/core/debug-history.interface.ts\n            \n            interface\n            DebugHistoryInterface\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                lib/interfaces/core/init-options.interface.ts\n            \n            interface\n            InitOptionsInterface\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                lib/interfaces/core/stage-error.interface.ts\n            \n            interface\n            StageErrorInterface\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                lib/interfaces/core/stage-type.interface.ts\n            \n            variable\n            getStageTypeValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/interfaces/core/stage.interface.ts\n            \n            interface\n            StageInterface\n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                lib/interfaces/stages/bucket-auto-stage.interface.ts\n            \n            interface\n            BucketAutoStageInterface\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                lib/interfaces/stages/bucket-stage.interface.ts\n            \n            interface\n            BucketStageInterface\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                lib/interfaces/stages/coll-stats-stage.interface.ts\n            \n            interface\n            CollStatsStageInterface\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                lib/interfaces/stages/facet-stage.interface.ts\n            \n            interface\n            FacetStageInterface\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/interfaces/stages/geo-near-stage.interface.ts\n            \n            interface\n            GeoNearStageInterface\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                lib/interfaces/stages/lookup-condition-payload.interface.ts\n            \n            interface\n            LookupConditionPayloadInterface\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                lib/interfaces/stages/lookup-equality-payload.interface.ts\n            \n            interface\n            LookupEqualityPayloadInterface\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                lib/main.ts\n            \n            class\n            PipelineBuilder\n            \n                100 %\n                (54/54)\n            \n        \n        \n            \n                \n                lib/main.ts\n            \n            variable\n            moment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/accumulator/index.ts\n            \n            variable\n            AddToSet\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/accumulator/index.ts\n            \n            variable\n            Avg\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/accumulator/index.ts\n            \n            variable\n            Max\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/accumulator/index.ts\n            \n            variable\n            Min\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/accumulator/index.ts\n            \n            variable\n            Push\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/accumulator/index.ts\n            \n            variable\n            StdDevPop\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/accumulator/index.ts\n            \n            variable\n            StdDevSamp\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/accumulator/index.ts\n            \n            variable\n            Sum\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            Absolute\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            Add\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            Ceil\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            Divide\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            Exponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            Floor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            Log\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            Log10\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            Mod\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            Multiply\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            NaturalLog\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            Pow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            Round\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            Sqrt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            Subtract\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/arithmetic/index.ts\n            \n            variable\n            Trunc\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            ArrayElemAt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            ArrayToObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            ConcatArrays\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            Filter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            First\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            In\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            IndexOfArray\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            IsArray\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            Last\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            MapOperator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            ObjectToArray\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            Range\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            Reduce\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            ReverseArray\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            Size\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            Slice\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/array/index.ts\n            \n            variable\n            Zip\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/boolean/index.ts\n            \n            variable\n            And\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/boolean/index.ts\n            \n            variable\n            Not\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/boolean/index.ts\n            \n            variable\n            Or\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/comparison/index.ts\n            \n            variable\n            Compare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/comparison/index.ts\n            \n            variable\n            Equal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/comparison/index.ts\n            \n            variable\n            GreaterThan\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/comparison/index.ts\n            \n            variable\n            GreaterThanEqual\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/comparison/index.ts\n            \n            variable\n            LessThan\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/comparison/index.ts\n            \n            variable\n            LessThanEqual\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/comparison/index.ts\n            \n            variable\n            NotEqual\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/conditional/index.ts\n            \n            variable\n            Cond\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/conditional/index.ts\n            \n            variable\n            IfNull\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/conditional/index.ts\n            \n            variable\n            Switch\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/custom-aggregation/index.ts\n            \n            variable\n            Accumulator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/custom-aggregation/index.ts\n            \n            variable\n            FunctionOperator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/data-size/index.ts\n            \n            variable\n            BinarySize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/data-size/index.ts\n            \n            variable\n            BsonSize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            DateFromParts\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            DateFromString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            DateToParts\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            DateToString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            DayOfMonth\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            DayOfWeek\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            DayOfYear\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            Hour\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            IsoDayOfWeek\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            IsoWeek\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            IsoWeekYear\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            Millisecond\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            Minute\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            Month\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            Second\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            ToDate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            Week\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/date/index.ts\n            \n            variable\n            Year\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/misc/index.ts\n            \n            variable\n            Let\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/misc/index.ts\n            \n            variable\n            Literal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/misc/index.ts\n            \n            variable\n            MergeObjects\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/misc/index.ts\n            \n            variable\n            Meta\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/misc/index.ts\n            \n            variable\n            Rand\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/misc/index.ts\n            \n            variable\n            SampleRate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/set/index.ts\n            \n            variable\n            AllElementsTrue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/set/index.ts\n            \n            variable\n            AnyElementTrue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/set/index.ts\n            \n            variable\n            SetDifference\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/set/index.ts\n            \n            variable\n            SetEquals\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/set/index.ts\n            \n            variable\n            SetIntersection\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/set/index.ts\n            \n            variable\n            SetIsSubset\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/set/index.ts\n            \n            variable\n            SetUnion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            Concat\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            IndexOfBytes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            IndexOfCP\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            Ltrim\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            RegexFind\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            RegexFindAll\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            RegexMatch\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            ReplaceAll\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            ReplaceOne\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            Rtrim\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            Split\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            StrCaseCmp\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            StrLenBytes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            StrLenCP\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            Substr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            SubstrBytes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            SubstrCP\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            ToLower\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            ToString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            ToUpper\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/string/index.ts\n            \n            variable\n            Trim\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/trigonometry/index.ts\n            \n            variable\n            Acos\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/trigonometry/index.ts\n            \n            variable\n            Acosh\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/trigonometry/index.ts\n            \n            variable\n            Asin\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/trigonometry/index.ts\n            \n            variable\n            Asinh\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/trigonometry/index.ts\n            \n            variable\n            Atan\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/trigonometry/index.ts\n            \n            variable\n            Atan2\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/trigonometry/index.ts\n            \n            variable\n            Atanh\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/trigonometry/index.ts\n            \n            variable\n            Cos\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/trigonometry/index.ts\n            \n            variable\n            Cosh\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/trigonometry/index.ts\n            \n            variable\n            DegreesToRadians\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/trigonometry/index.ts\n            \n            variable\n            RadiansToDegrees\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/trigonometry/index.ts\n            \n            variable\n            Sin\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/trigonometry/index.ts\n            \n            variable\n            Sinh\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/trigonometry/index.ts\n            \n            variable\n            Tan\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/trigonometry/index.ts\n            \n            variable\n            Tanh\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/type/index.ts\n            \n            variable\n            Convert\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/type/index.ts\n            \n            variable\n            IsNumber\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/type/index.ts\n            \n            variable\n            ToBool\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/type/index.ts\n            \n            variable\n            ToDecimal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/type/index.ts\n            \n            variable\n            ToDouble\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/type/index.ts\n            \n            variable\n            ToInt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/type/index.ts\n            \n            variable\n            ToLong\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/type/index.ts\n            \n            variable\n            ToObjectId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/operators/type/index.ts\n            \n            variable\n            Type\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/validators/index.ts\n            \n            variable\n            lookupPayloadValidator\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            custom-env : ^2.0.1\n        \n            moment-timezone : ^0.5.33\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StageTypeEnum   (lib/.../stage-type.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/interfaces/core/stage-type.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        StageTypeEnum\n                    \n                \n                    \n                        \n                            Aggregation Pipeline Stages.*\nIn the db.collection.aggregate method and db.aggregate method, pipeline stages appear in an array. Documents pass\nthrough the stages in sequence.\n\n                        \n                    \n                        \n                            \n                                 addFields\n                            \n                        \n                        \n                            \n                                Value : $addFields\n                            \n                        \n                        \n                            \n                                 bucket\n                            \n                        \n                        \n                            \n                                Value : $bucket\n                            \n                        \n                        \n                            \n                                 bucketAuto\n                            \n                        \n                        \n                            \n                                Value : $bucketAuto\n                            \n                        \n                        \n                            \n                                 collStats\n                            \n                        \n                        \n                            \n                                Value : $collStats\n                            \n                        \n                        \n                            \n                                 count\n                            \n                        \n                        \n                            \n                                Value : $count\n                            \n                        \n                        \n                            \n                                 facet\n                            \n                        \n                        \n                            \n                                Value : $facet\n                            \n                        \n                        \n                            \n                                 geoNear\n                            \n                        \n                        \n                            \n                                Value : $geoNear\n                            \n                        \n                        \n                            \n                                 graphLookup\n                            \n                        \n                        \n                            \n                                Value : $graphLookup\n                            \n                        \n                        \n                            \n                                 group\n                            \n                        \n                        \n                            \n                                Value : $group\n                            \n                        \n                        \n                            \n                                 indexStats\n                            \n                        \n                        \n                            \n                                Value : $indexStats\n                            \n                        \n                        \n                            \n                                 limit\n                            \n                        \n                        \n                            \n                                Value : $limit\n                            \n                        \n                        \n                            \n                                 listSessions\n                            \n                        \n                        \n                            \n                                Value : $listSessions\n                            \n                        \n                        \n                            \n                                 lookup\n                            \n                        \n                        \n                            \n                                Value : $lookup\n                            \n                        \n                        \n                            \n                                 match\n                            \n                        \n                        \n                            \n                                Value : $match\n                            \n                        \n                        \n                            \n                                 merge\n                            \n                        \n                        \n                            \n                                Value : $merge\n                            \n                        \n                        \n                            \n                                 out\n                            \n                        \n                        \n                            \n                                Value : $out\n                            \n                        \n                        \n                            \n                                 planCacheStats\n                            \n                        \n                        \n                            \n                                Value : $planCacheStats\n                            \n                        \n                        \n                            \n                                 project\n                            \n                        \n                        \n                            \n                                Value : $project\n                            \n                        \n                        \n                            \n                                 redact\n                            \n                        \n                        \n                            \n                                Value : $redact\n                            \n                        \n                        \n                            \n                                 replaceRoot\n                            \n                        \n                        \n                            \n                                Value : $replaceRoot\n                            \n                        \n                        \n                            \n                                 replaceWith\n                            \n                        \n                        \n                            \n                                Value : $replaceWith\n                            \n                        \n                        \n                            \n                                 sample\n                            \n                        \n                        \n                            \n                                Value : $sample\n                            \n                        \n                        \n                            \n                                 search\n                            \n                        \n                        \n                            \n                                Value : $search\n                            \n                        \n                        \n                            \n                                 set\n                            \n                        \n                        \n                            \n                                Value : $set\n                            \n                        \n                        \n                            \n                                 skip\n                            \n                        \n                        \n                            \n                                Value : $skip\n                            \n                        \n                        \n                            \n                                 sort\n                            \n                        \n                        \n                            \n                                Value : $sort\n                            \n                        \n                        \n                            \n                                 sortByCount\n                            \n                        \n                        \n                            \n                                Value : $sortByCount\n                            \n                        \n                        \n                            \n                                 unionWith\n                            \n                        \n                        \n                            \n                                Value : $unionWith\n                            \n                        \n                        \n                            \n                                 unset\n                            \n                        \n                        \n                            \n                                Value : $unset\n                            \n                        \n                        \n                            \n                                 unwind\n                            \n                        \n                        \n                            \n                                Value : $unwind\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmongodb-pipeline-builder\n[ pre-release ]\n\n\n\nis a pipeline builder for the db.collection.aggregate method and db.aggregate method. It will simplify pipelines by making them more\nreadable and much easier to edit. It also allows you to test your pipelines on a dataset in order to verify them. Pipeline stages appear in an array. Documents pass\nthrough the stages in sequence.\n\n\nnpm package \nnpm i mongodb-pipeline-builder@latest --save\nUsage\n\nimport { PipelineBuilder } from 'mongodb-pipeline-builder';\nimport { EqualityPayload, Expression, List, Only, Property } from 'mongodb-pipeline-builder/helpers';\nimport { ArrayElemAt, Equal } from 'mongodb-pipeline-builder/operators';\n\n\n\nconst myNewPipeline = new PipelineBuilder('name-of-my-new-pipeline')\n    .Match( Expression( Equal( '$id' , userId ) ) )\n    .Lookup( EqualityPayload( 'profiles', 'profile', 'profileId', 'id' ) )\n    .Project( Only( 'firstname', 'lastname', 'email' ) )\n    .AddFields( List(\n        Property( 'skills', ArrayElemAt( '$profile.skills', 0 ) ),\n        Property( 'availability', ArrayElemAt( '$profile.availability', 0 ) ),\n    ) )\n    .Unset( List( 'profile' ) )\n    .getPipeline();\n\n\n\n*** If no helper is available for a stage, use its method and pass it a valid value as a parameter.\n\n\nis equivalent to:\n\nconst myNewPipeline = [\n    {\n        $match: {\n            $expr: {\n                $eq: [ '$id', userId ]\n            }\n        },\n    },\n    {\n        $lookup: {\n            from: 'profiles',\n            as: 'profile',\n            localField: 'profileId',\n            foreignField: 'id'\n        },\n    },\n    {\n        $project: {\n            _id: 0,\n            firstname: 1,\n            lastname: 1\n            email: 1\n        },\n    },\n    {\n        $addFields: {\n            skills: {\n                $arrayElemAt('$profile.skills', 0)\n            },\n            availability: {\n                $arrayElemAt('$profile.availability', 0)\n            }\n        },\n    },\n    {\n        $unset: [ 'profile' ]\n    }\n];\n\n\nSoon more complex examples will be available!\n[ Aggregation Pipeline Stages ]\n\n\nAddFields | Bucket | BucketAuto | CollStats | Count | Facet | GeoNear | GraphLookup | Group | IndexStats | Limit | ListSessions | Lookup | Match | Merge | Out | PlanCacheStats | Project | Redact | ReplaceRoot | ReplaceWith | Sample | Search | Set | Skip | Sort | SortByCount | UnionWith | Unset | Unwind\n\n\n[ Aggregation Pipeline Helpers ]\n\n\nAddFields( Property | List( Property, Property, ... )\nLookup( ConditionPayload | EqualityPayload )\nMatch( Expression | Field | \"any valid read operation request syntax\" )\nProject( Only | Ignore )\nUnset( List )\n\n\n[ Aggregation Pipeline Operators ]\n\n\nAbsolute | Accumulator | Acos | Acosh | Add | AddToSet | AllElementsTrue | And | AnyElementTrue | ArrayElemAt | ArrayToObject | Asin | Asinh | Atan | Atan2 | Atanh | Avg | BinarySize | BsonSize | Ceil | Compare | Concat | ConcatArrays | Cond | Convert | Cos | Cosh | DateFromParts | DateFromString | DateToParts | DateToString | DayOfMonth | DayOfWeek | DayOfYear | DegreesToRadians | Divide | Equal | Exponent | Filter | First | Floor | FunctionOperator | GreaterThan | GreaterThanEqual | Hour | IfNull | Ignore | In | IndexOfArray | IndexOfBytes | IndexOfCP | IsArray | IsNumber | IsoDayOfWeek | IsoWeek | IsoWeekYear | Last | LessThan | LessThanEqual | Let | Literal | Log | Log10 | Ltrim | MapOperator | Max | MergeObjects | Meta | Millisecond | Min | Minute | Mod | Month | Multiply | NaturalLog | Not | NotEqual | ObjectToArray | Only | Or | Pow | Push | RadiansToDegrees | Rand | Range | Reduce | RegexFind | RegexFindAll | RegexMatch | ReplaceAll | ReplaceOne | ReverseArray | Round | Rtrim | SampleRate | Second | SetDifference | SetEquals | SetIntersection | SetIsSubset | SetUnion | Sin | Sinh | Size | Slice | Split | Sqrt | StdDevPop | StdDevSamp | StrCaseCmp | StrLenBytes | StrLenCP | Substr | SubstrBytes | SubstrCP | Subtract | Sum | Switch | Tan | Tanh | ToBool | ToDate | ToDecimal | ToDouble | ToInt | ToLong | ToLower | ToObjectId | ToString | ToUpper | Trim | Trunc | Type | Week | Year | Zip\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Mike Dev\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StageLabel   (lib/.../stage-type.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/interfaces/core/stage-type.interface.ts\n    \n    \n        \n            \n                \n                    \n                    StageLabel\n                \n            \n            \n                \n                    Type of pipeline stage\n\n                \n            \n            \n                \n                            \"addFields\" | \"bucket\" | \"bucketAuto\" | \"collStats\" | \"count\" | \"facet\" | \"geoNear\" | \"graphLookup\" | \"group\" | \"indexStats\" | \"limit\" | \"listSessions\" | \"lookup\" | \"match\" | \"merge\" | \"out\" | \"planCacheStats\" | \"project\" | \"redact\" | \"replaceRoot\" | \"replaceWith\" | \"sample\" | \"search\" | \"set\" | \"skip\" | \"sort\" | \"sortByCount\" | \"unionWith\" | \"unset\" | \"unwind\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
